{
  "hash": "d1e21f122fb3a1a72a8c3639f616400a",
  "result": {
    "markdown": "---\ntitle: \"Network Block Modeling - Geographical Comparisson\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-04-26\"\ncategories: [code, analysis, block_model]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(intergraph)\nlibrary(ggplot2)\n```\n:::\n\n\nThis post will explore the Synthetic Mass network data in more detail.\n\n# Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr <- read_csv(\"post1_data/pat_attr.csv\", \n    col_types = cols(...1 = col_skip()))\npro_attr <- read_csv(\"post1_data/pro_attr.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaning <- read_csv(\"post1_data//encounters_cleaning.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaned <- read_csv(\"post1_data//encounters_cleaned.csv\", \n    col_types = cols(...1 = col_skip()))\nencounter_attributes <- read_csv(\"post1_data/encounter_attributes.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_el  <- read_csv(\"post1_data/encounters_el.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_st_3 <- read_csv(\"post1_data/encounters.st.3.csv\", \n    col_types = cols(...1 = col_skip()))\nattribute_list <- read.csv(\"post1_data/attribute_list.csv\")\npat_blks6 <- readRDS(\"pat_blks6_results.rds\")\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n\n# Create bipartite network with attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph\nencounters.ig <- graph_from_biadjacency_matrix(encounters.stat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat2 <- asNetwork(encounters.ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprojected_graph <- bipartite_projection(encounters.ig)\n```\n:::\n\n\n## PATIENT\n\n::: {.cell}\n\n```{.r .cell-code}\npatient_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj1))\n\npatient.stat <- asNetwork(projected_graph$proj1)\n\npatient.se <- equiv.clust(patient_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_blk_model.patient.org <- blockmodel(patient_matrix,\n patient.se, k = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block<-function(x=pat_blk_mod, main=NULL, cex.lab=.00001,show_labels = FALSE){\n plot.sociomatrix(x$blocked.data, labels=list(x$plabels,x$plabels),\n main=main, drawlines = FALSE, cex.lab=cex.lab)\n for (j in 2:length(x$plabels)) if (x$block.membership[j] !=\n x$block.membership[j-1])\n abline(v = j- 0.5, h = j- 0.5, lty = 3, xpd=FALSE)\n }\n \nplot.block(pat_blk_model.patient.org, main = \"patient\")\n```\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_blks6 <- readRDS(\"pat_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\npat_blk_mod <- blockmodel(patient_matrix, pat_blks6$best$best1$clu,\n                      plabels = rownames(patient_matrix))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\npatient.stat%v%\"role\"<-pat_blk_mod$block.membership[match(patient.stat%v%\"vertex.names\",pat_blk_mod$plabels)]\n#plot network using \"role\" to color nodes\nGGally::ggnet2(patient.stat,\n               node.color=\"role\", \n               node.size=sna::degree(patient.stat, gmode=\"graph\"),\n               node.alpha = .5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## PROVIDER\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj2))\n\nprovider.stat <- asNetwork(projected_graph$proj2)\n\nprovider.se <- equiv.clust(provider_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nblk_model.provider.org <- blockmodel(provider_matrix,\n provider.se, k = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\nprov_blk_mod <- blockmodel(provider_matrix, prov_blks6$best$best1$clu,\n                      plabels = rownames(provider_matrix))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\nprovider.stat%v%\"role\"<-prov_blk_mod$block.membership[match(provider.stat%v%\"vertex.names\",prov_blk_mod$plabels)]\n\n#plot network using \"role\" to color nodes\nGGally::ggnet2(provider.stat,\n               node.color=\"role\", \n               node.size=sna::degree(provider.stat, gmode=\"graph\"),\n               node.alpha = .5) + ggtitle(\"Provider 6 Block Model Network\")\n```\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Create New Attribute Lists\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr$block <- pat_blk_mod$block.membership\npro_attr$block <- prov_blk_mod$block.membership\nboth_attr <- bind_rows(pat_attr, pro_attr)\n\npat_attr_list <- do.call(list, pat_attr)\npro_attr_list <- do.call(list, pro_attr)\nattribute_list <- do.call(list, both_attr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider.st <- network(provider_matrix,\n                       directed = FALSE,\n                       matrix.type = \"adjacency\",\n                       vertex.attr = pro_attr_list)\nprovider.st\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 253 \n  directed = FALSE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 554 \n    missing edges= 0 \n    non-missing edges= 554 \n\n Vertex attribute names: \n    block CITY GENDER NAME type vertex.names \n\nNo edge attributes\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider_graph <- graph_from_biadjacency_matrix(provider.st)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\n#colors <-  c(\"yellow\", \"blue\", \"green\", \"orange\", \"red\", \"purple\")\n#vertex_colors <- colors[pro_attr_list$block]\nvertex_colors <- ifelse(pro_attr_list$CITY == \"BOSTON\", \"red\", \"white\")\n\nvertex_shape <- ifelse(pro_attr_list$CITY == \"BOSTON\", \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"SN Graph\")\n```\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nWhat other cities are on the provider list. Boston is not being properly represented, I have a feeling\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(pro_attr$CITY)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n         ALLSTON          AMHERST          ANDOVER        ARLINGTON \n               1                2                1                3 \n          AUBURN       AUBURNDALE       BELLINGHAM          BEVERLY \n               1                2                1                2 \n          Boston           BOSTON      BRIDGEWATER         BRIGHTON \n               1                5                2                2 \n        BROCKTON        BROOKLINE        CAMBRIDGE      CHARLESTOWN \n               1                2                4                1 \n        CHARLTON          CHATHAM       CHELMSFORD          CHELSEA \n               1                1                1                2 \n        CHICOPEE        DARTMOUTH           DEDHAM       DORCHESTER \n               2                1                5                2 \n      E FALMOUTH        Fairhaven        FAIRHAVEN       FALL RIVER \n               1                1                3                4 \n        FALMOUTH        Fitchburg       FOXBOROUGH       FRAMINGHAM \n               3                1                1                2 \n      GEORGETOWN           GROTON          HANOVER     HARWICH PORT \n               1                1                2                1 \n       HAVERHILL          HINGHAM        HOLLISTON          HOLYOKE \n               3                2                1                2 \n       HOPKINTON          HYANNIS        HYDE PARK    Jamaica Plain \n               2                2                1                1 \n   JAMAICA PLAIN         LAWRENCE       LEOMINSTER        LEXINGTON \n               2                3                2                3 \n          LOWELL           LUDLOW             Lynn             LYNN \n               3                1                1                1 \n          MALDEN      MARLBOROUGH         MATTAPAN          MEDFORD \n               1                5                2                2 \n         MELROSE          METHUEN       MIDDLEBORO          MILFORD \n               2                2                1                3 \n          MILTON           NATICK          NEEDHAM      NEW BEDFORD \n               3                3                2                3 \n     NEWBURYPORT           NEWTON      NORTH ADAMS    NORTH ANDOVER \n               1                5                1                1 \n NORTH DARTMOUTH      NORTHAMPTON     NORTHBOROUGH          NORWELL \n               1                1                1                3 \n         NORWOOD       OAK BLUFFS          PEABODY         PEMBROKE \n               6                1                2                1 \n      PITTSFIELD         PLYMOUTH           QUINCY         RANDOLPH \n               3                6                3                2 \n         RAYNHAM          READING         ROCHDALE       ROSLINDALE \n               2                1                1                4 \n          ROWLEY          ROXBURY       S YARMOUTH            SALEM \n               1                1                1                2 \n        SCITUATE           SHARON       SHREWSBURY       SOMERVILLE \n               3                1                1                3 \n  SOUTH YARMOUTH     SOUTHBOROUGH      SPRINGFIELD         STONEHAM \n               2                1                2                2 \n       STOUGHTON        TEWKSBURY            UPTON         UXBRIDGE \n               2                2                1                1 \n         WALPOLE          WALTHAM          WAREHAM        WELLESLEY \n               2                7                3                1 \nWEST BRIDGEWATER     West Roxbury     WEST ROXBURY      WESTBOROUGH \n               3                1                1                4 \n        WESTFORD         WESTWOOD         WEYMOUTH        WILBRAHAM \n               3                1                2                1 \n    WILLIAMSTOWN         WINTHROP           WOBURN        Worcester \n               1                1                6                1 \n       WORCESTER \n              17 \n```\n:::\n\n```{.r .cell-code}\npro_attr <- pro_attr %>%\n  mutate(\n    CITY =tolower(CITY)\n  )\npro_attr_list <- do.call(list, pro_attr)\n```\n:::\n\nShould have cleaned that earlier, but here we go!\n\n::: {.cell}\n\n```{.r .cell-code}\nBoston_Neighborhoods <- c(\n  \"ALLSTON\",\n  \"BRIGHTON\",\n  \"BOSTON\",\n  \"CHARLESTOWN\",\n  \"DORCHESTER\",\n  \"HYDE PARK\",\n  \"JAMAICA PLAIN\",\n  \"MATTAPAN\",\n  \"ROSLINDALE\",\n  \"ROXBURY\",\n  \"West Roxbury\",\n  \"WEST ROXBURY\"\n)\nBoston_Neighborhoods <- tolower(Boston_Neighborhoods)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\n#colors <-  c(\"yellow\", \"blue\", \"green\", \"orange\", \"red\", \"purple\")\n#vertex_colors <- colors[pro_attr_list$block]\nvertex_colors <- ifelse(pro_attr_list$CITY %in% Boston_Neighborhoods, \"red\", \"white\")\nvertex_shape <- ifelse(pro_attr_list$block == \"1\", \"circle\", \"square\")\n#vertex_shape <- ifelse(pro_attr_list$CITY == \"BOSTON\", \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - RED = BOSTON\")\n```\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\nSo... it's not Boston related. \n\nHow about Highest populations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlargest_pop <- c(\n\"Boston\",\n\"Worcester\",\n\"Springfield\",\n\"Cambridge\",\n\"Lowell\",\n\"Brockton\",\n\"Quincy\",\n\"Lynn\",\n\"New Bedford\",\n\"Fall River\",\n\"Lawrence\",\n\"Newton\",\n\"Somerville\",\n\"Framingham\",\n\"Haverhill\")\nlargest_pop <- tolower(largest_pop)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\n#colors <-  c(\"yellow\", \"blue\", \"green\", \"orange\", \"red\", \"purple\")\n#vertex_colors <- colors[pro_attr_list$block]\nvertex_colors <- ifelse(pro_attr_list$CITY %in% largest_pop, \"red\", \"white\")\nvertex_shape <- ifelse(pro_attr_list$block == \"1\", \"circle\", \"square\")\n#vertex_shape <- ifelse(pro_attr_list$CITY == \"BOSTON\", \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - RED = Largest Cities\")\n```\n\n::: {.cell-output-display}\n![](post_5_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nblock1 <- pro_attr %>%\n  filter(block == 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTed955 <- encounters_cleaned %>% \n    filter(PROVIDER == \"Ted955 Reilly981\") %>% \n    group_by(PROVIDER, CITY.x, REASONDESCRIPTION)%>%\n  summarize(COUNT = n()) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'PROVIDER', 'CITY.x'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nTed955\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 4\n# Groups:   PROVIDER, CITY.x [1]\n   PROVIDER         CITY.x    REASONDESCRIPTION                            COUNT\n   <chr>            <chr>     <chr>                                        <int>\n 1 Ted955 Reilly981 Fitchburg Abnormal findings diagnostic imaging heart+…    11\n 2 Ted955 Reilly981 Fitchburg Acute ST segment elevation myocardial infar…     1\n 3 Ted955 Reilly981 Fitchburg Acute non-ST segment elevation myocardial i…     2\n 4 Ted955 Reilly981 Fitchburg Aortic valve regurgitation (disorder)            4\n 5 Ted955 Reilly981 Fitchburg Aortic valve stenosis (disorder)                 6\n 6 Ted955 Reilly981 Fitchburg Chronic congestive heart failure (disorder)     86\n 7 Ted955 Reilly981 Fitchburg History of coronary artery bypass grafting …     6\n 8 Ted955 Reilly981 Fitchburg Ischemic heart disease (disorder)               30\n 9 Ted955 Reilly981 Fitchburg Mitral valve regurgitation (disorder)            2\n10 Ted955 Reilly981 Fitchburg Myocardial infarction (disorder)                 3\n11 Ted955 Reilly981 Fitchburg Stroke                                           1\n```\n:::\n:::\n\nGonna go ahead and say Ted's a Cardiologist",
    "supporting": [
      "post_5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}