{
  "hash": "4cc113ee7018984fb0304a15e9d4c3dc",
  "result": {
    "markdown": "---\ntitle: \"POST 5\"\nsubtitle: \"Network Block Modeling - Geographical Comparisson\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-05-01\"\ncategories: [code, analysis, block_model, provider network, geography]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(intergraph)\nlibrary(ggplot2)\n```\n:::\n\n\nThis post will explore the Provider Network in more including replicating block membership and plotting cities as attributes\n\n# Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr <- read_csv(\"pat_attr.csv\", \n    col_types = cols(...1 = col_skip()))\npro_attr <- read_csv(\"pro_attr.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaning <- read_csv(\"post1drug_data//encounters_cleaning.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaned <- read_csv(\"post1drug_data//encounters_cleaned.csv\", \n    col_types = cols(...1 = col_skip()))\nencounter_attributes <- read_csv(\"post1drug_data/encounter_attributes.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_el  <- read_csv(\"post1drug_data/encounters_el.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_st_3 <- read_csv(\"post1drug_data/encounters.st.3.csv\", \n    col_types = cols(...1 = col_skip()))\npat_blks6 <- readRDS(\"pat_blks6_results.rds\")\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#combine pro and pat attr\nboth_attr <- bind_rows(pat_attr, pro_attr)\nhead(both_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  NAME                   GENDER RACE  MARITAL  CITY     INCOME   AGE type  block\n  <chr>                  <chr>  <chr> <chr>    <chr>     <dbl> <dbl> <chr> <dbl>\n1 Annice210 Gleason633   Female white Married  brookli…   1565    37 PATI…     6\n2 Julianne852 Barrows492 Female white Widowed  hamilton  39537    65 PATI…     6\n3 Alesha810 Heaney114    Female white Divorced framing… 114339    46 PATI…     6\n4 Sandee884 Rice937      Female white <NA>     taunton   96256    26 PATI…     6\n5 Mia349 Runte676        Female white Divorced chelmsf…  71238    44 PATI…     6\n6 Damian46 Dach178       Male   white <NA>     swansea   74155    26 PATI…     6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create combined attribute list\nattribute_list <- do.call(list, both_attr)\n#write.csv(attribute_list, \"attribute_list.csv\")\n```\n:::\n\n\n# Create bipartite network with attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph\nencounters.ig <- graph_from_biadjacency_matrix(encounters.stat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat2 <- asNetwork(encounters.ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprojected_graph <- bipartite_projection(encounters.ig)\n```\n:::\n\n\n## PROVIDER\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj2))\n\nprovider.stat <- asNetwork(projected_graph$proj2)\n\nprovider.se <- equiv.clust(provider_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nblk_model.provider.org <- blockmodel(provider_matrix,\n provider.se, k = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\nprov_blk_mod <- blockmodel(provider_matrix, prov_blks6$best$best1$clu,\n                      plabels = rownames(provider_matrix))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\nprovider.stat%v%\"role\"<-prov_blk_mod$block.membership[match(provider.stat%v%\"vertex.names\",prov_blk_mod$plabels)]\n\n#plot network using \"role\" to color nodes\nGGally::ggnet2(provider.stat,\n               node.color=\"role\", \n               node.size=sna::degree(provider.stat, gmode=\"graph\"),\n               node.alpha = .5) + ggtitle(\"Provider 6 Block Model Network\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Create New Attribute Lists\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Include Block Membership in Provider Attribute List\npro_attr_list <- do.call(list, pro_attr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider.st <- network(provider_matrix,\n                       directed = FALSE,\n                       matrix.type = \"adjacency\",\n                       vertex.attr = pro_attr_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider_graph <- graph_from_biadjacency_matrix(provider.st)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\n#colors <-  c(\"yellow\", \"blue\", \"green\", \"orange\", \"red\", \"purple\")\n#vertex_colors <- colors[pro_attr_list$block]\nvertex_colors <- ifelse(pro_attr_list$CITY == \"boston\", \"red\", \"white\")\n\nvertex_shape <- ifelse(pro_attr_list$CITY == \"boston\", \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"SN Graph\")\n```\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nWhat other cities are on the provider list. Boston is not being properly represented, I have a feeling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sort(pro_attr$CITY))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n       abington         amherst       attleboro          auburn      auburndale \n              1               2               5               1               2 \n           ayer         beverly          boston       braintree        brighton \n              1               1               2               1               2 \n       brockton       brookline         byfield       cambridge     centerville \n              2               1               1               4               1 \n    charlestown        charlton      chelmsford         chelsea   chestnut hill \n              1               1               1               1               1 \n       chicopee         danvers       dartmouth      dorchester   east sandwich \n              2               2               2               1               1 \n      fairhaven      fall river       fitchburg      foxborough      framingham \n              2               7               4               1               4 \n       franklin         gardner      greenfield          groton          hadley \n              1               2               3               1               1 \n        hanover       holliston         holyoke       hopkinton         hyannis \n              2               1               2               1               3 \n      lakeville      leominster          ludlow            lynn         mashpee \n              3               5               1               6               1 \n       medfield         melrose      middleboro       middleton         milford \n              1               2               1               1               2 \n         milton          natick         needham     new bedford     newburyport \n              2               4               2               4               3 \n         newton     north adams north dartmouth     northampton          norton \n              2               1               1               3               1 \n        norwood         peabody      pittsfield        plymouth          quincy \n              3               3               2               1               1 \n       randolph         raynham         reading        rochdale        rockland \n              2               1               2               1               1 \n     roslindale     s dartmouth      s yarmouth           salem        sandwich \n              1               1               1               1               2 \n         saugus         shirley        somerset      somerville    south boston \n              1               1               2               1               2 \n south hamilton  south yarmouth     springfield        stoneham       stoughton \n              2               2               1               4               1 \n     swampscott         swansea         taunton           upton    w brookfield \n              1               1               6               1               1 \n          waban       wakefield         walpole         waltham            ware \n              1               2               1               7               1 \n        wareham       wellesley wellesley hills    west roxbury   west yarmouth \n              3               2               1               1               1 \n      westfield        westford        westwood        weymouth       wilbraham \n              3               3               1               3               1 \n       winthrop          woburn       worcester        wrentham   yarmouth port \n              1               5              12               1               1 \n```\n:::\n:::\n\n\nShould have cleaned that earlier, but here we go!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBoston_Neighborhoods <- c(\n  \"ALLSTON\",\n  \"BRIGHTON\",\n  \"BOSTON\",\n  \"CHARLESTOWN\",\n  \"DORCHESTER\",\n  \"HYDE PARK\",\n  \"JAMAICA PLAIN\",\n  \"MATTAPAN\",\n  \"ROSLINDALE\",\n  \"ROXBURY\",\n  \"West Roxbury\",\n  \"WEST ROXBURY\"\n)\nBoston_Neighborhoods <- tolower(Boston_Neighborhoods)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\nvertex_colors <- ifelse(pro_attr_list$CITY %in% Boston_Neighborhoods, \"red\", \"white\")\nvertex_shape <- ifelse(pro_attr_list$block == \"1\", \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - RED = BOSTON\")\n```\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nSo... the density of providers is not necessarily Boston related, by the looks of this graph\n\nHow about Highest populations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlargest_pop <- c(\n\"Boston\",\n\"Worcester\",\n\"Springfield\",\n\"Cambridge\",\n\"Lowell\",\n\"Brockton\",\n\"Quincy\",\n\"Lynn\",\n\"New Bedford\",\n\"Fall River\",\n\"Lawrence\",\n\"Newton\",\n\"Somerville\",\n\"Framingham\",\n\"Haverhill\")\nlargest_pop <- tolower(largest_pop)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\nvertex_color <-  ifelse(pro_attr_list$CITY %in% largest_pop, \"red\", \"gray\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_color,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - circle = Largest Cities\")\n\n           # Legend title\n\n# Define legend for vertex shapes\nlegend(\"topright\",\n       legend = c(\"Largest City\", \"Other\"),  # You can customize these labels\n       fill = c(\"red\", \"gray\"),                      # Point shapes corresponding to vertex shapes\n       title = \"Nodes: Who\")                     # Legend title\n```\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\nvertex_color <-  ifelse(pro_attr_list$block == \"1\", \"red\",\n                        ifelse(pro_attr_list$block == \"2\", \"orange\",\n                               ifelse(pro_attr_list$block == \"3\", \"yellow\",\n                                      ifelse(pro_attr_list$block == \"4\", \"blue\",\n                                             ifelse(pro_attr_list$block == \"5\", \"green\",\n                                                    ifelse(pro_attr_list$block == \"6\", \"purple\", \"black\"))))))\nvertex_shape <- ifelse(pro_attr_list$CITY %in% largest_pop, \"circle\", \"square\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_color,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - Blocks and Largest Cities\")\n\n\n# Define legend for vertex colors\nlegend(\"bottomright\",\n       legend = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),  # You can customize these labels\n       fill = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"),   # Fill colors corresponding to vertex colors\n       title = \"Nodes: Blocks\")              # Legend title\n\n# Define legend for vertex shapes\nlegend(\"topright\",\n       legend = c(\"Largest City\", \"Other\"),  # You can customize these labels\n       pch = c(0, 1),                      # Point shapes corresponding to vertex shapes\n       title = \"Nodes: Who\")                     # Legend title\n```\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\nI'm not sure why some of the colors are missing from this graph. \nLet's remove the \"Largest City\" attribute\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign colors\nvertex_color <-  ifelse(pro_attr_list$block == \"1\", \"red\",\n                        ifelse(pro_attr_list$block == \"2\", \"orange\",\n                               ifelse(pro_attr_list$block == \"3\", \"yellow\",\n                                      ifelse(pro_attr_list$block == \"4\", \"blue\",\n                                             ifelse(pro_attr_list$block == \"5\", \"green\",\n                                                    ifelse(pro_attr_list$block == \"6\", \"purple\", \"black\"))))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider_graph, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 4, \n     vertex.color = vertex_color,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Providers - Blocks\")\n\n\n# Define legend for vertex colors\nlegend(\"bottomright\",\n       legend = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),  # You can customize these labels\n       fill = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"),   # Fill colors corresponding to vertex colors\n       title = \"Nodes: Blocks\")              # Legend title\n```\n\n::: {.cell-output-display}\n![](post_5_drug_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "post_5_drug_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}