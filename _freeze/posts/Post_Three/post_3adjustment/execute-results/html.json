{
  "hash": "9ab1004fdc0ed304abf548a7b9c746b9",
  "result": {
    "markdown": "---\ntitle: \"Network Block Modeling - Patients\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-04-25\"\ncategories: [code, analysis, block_model]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(intergraph)\nlibrary(ggplot2)\n```\n:::\n\n\nThis post will explore the Synthetic Mass network data in more detail.\n\n# Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr <- read_csv(\"post_one_data/pat_attr.csv\", \n    col_types = cols(...1 = col_skip()))\npro_attr <- read_csv(\"post_one_data/pro_attr.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaning <- read_csv(\"post_one_data//encounters_cleaning.csv\", \n    col_types = cols(...1 = col_skip()))\nencounter_attributes <- read_csv(\"post_one_data/encounter_attributes.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_el  <- read_csv(\"post_one_data/encounters_el.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_st_3 <- read_csv(\"post_one_data/encounters.st.3.csv\", \n    col_types = cols(...1 = col_skip()))\nattribute_list <- read.csv(\"post_one_data/attribute_list.csv\")\n```\n:::\n\n\n# Create bipartite network with attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph\nencounters.ig <- graph_from_biadjacency_matrix(encounters.stat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat2 <- asNetwork(encounters.ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprojected_graph <- bipartite_projection(encounters.ig)\npatient_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj1))\n\npatient.stat <- asNetwork(projected_graph$proj1)\n\npatient.se <- equiv.clust(patient_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n\nnames(patient.se)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"cluster\"        \"metric\"         \"equiv.fun\"      \"cluster.method\"\n[5] \"glabels\"        \"plabels\"       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(patient.se, main = \"patient\")\nrect.hclust(patient.se$cluster, k = 4)\n```\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_blk_model.patient.org <- blockmodel(patient_matrix,\n patient.se, k = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n pat_blk_model.patient.org$block.model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Block 1     Block 2     Block 3     Block 4\nBlock 1 1.00000000 0.018535262 0.112244898 0.061224490\nBlock 2 0.01853526 0.020772476 0.003616637 0.005424955\nBlock 3 0.11224490 0.003616637 0.238095238 0.000000000\nBlock 4 0.06122449 0.005424955 0.000000000 0.476190476\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block<-function(x=pat_blk_mod, main=NULL, cex.lab=.00001,show_labels = FALSE){\n plot.sociomatrix(x$blocked.data, labels=list(x$plabels,x$plabels),\n main=main, drawlines = FALSE, cex.lab=cex.lab)\n for (j in 2:length(x$plabels)) if (x$block.membership[j] !=\n x$block.membership[j-1])\n abline(v = j- 0.5, h = j- 0.5, lty = 3, xpd=FALSE)\n }\n \nplot.block(pat_blk_model.patient.org, main = \"patient\")\n```\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#pat_blks6 <- blockmodeling::optRandomParC(patient_matrix,k=6, rep=20, approaches=\"ss\", blocks=\"com\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the blks2 object to a file\n#saveRDS(pat_blks6, \"pat_blks6_results.rds\")\n\n# Later, when you want to use it again, you can read it back into R\npat_blks6 <- readRDS(\"pat_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\npat_blk_mod <- blockmodel(patient_matrix, pat_blks6$best$best1$clu,\n                      plabels = rownames(patient_matrix))\n# print blockmodel object\npat_blk_mod$block.model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Block 1     Block 2     Block 3     Block 4 Block 5    Block 6\nBlock 1 1.00000000 1.000000000 0.083333333 0.011538462 0.03125 0.00000000\nBlock 2 1.00000000 1.000000000 0.000000000 0.007692308 0.00000 0.75000000\nBlock 3 0.08333333 0.000000000 0.131578947 0.001538462 0.00000 0.00000000\nBlock 4 0.01153846 0.007692308 0.001538462 0.019711538 0.00000 0.02307692\nBlock 5 0.03125000 0.000000000 0.000000000 0.000000000 1.00000 0.00000000\nBlock 6 0.00000000 0.750000000 0.000000000 0.023076923 0.00000 0.66666667\n```\n:::\n:::\n\n\n#assign attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(pat_blk_mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 11\n $ block.membership: int [1:121] 1 1 1 1 1 1 1 1 1 1 ...\n $ order.vector    : int [1:121] 1 5 16 22 24 26 28 29 35 36 ...\n $ block.content   : chr \"density\"\n $ blocked.data    : num [1:121, 1:121] 0 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:121] \"Akiko835 Larkin917\" \"Arleen939 Kling921\" \"Casandra937 Grimes165\" \"Chun678 Hirthe744\" ...\n  .. ..$ : chr [1:121] \"Akiko835 Larkin917\" \"Arleen939 Kling921\" \"Casandra937 Grimes165\" \"Chun678 Hirthe744\" ...\n $ block.model     : num [1:6, 1:6] 1 1 0.0833 0.0115 0.0312 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n  .. ..$ : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n $ plabels         : chr [1:121] \"Akiko835 Larkin917\" \"Arleen939 Kling921\" \"Casandra937 Grimes165\" \"Chun678 Hirthe744\" ...\n $ glabels         : int [1:121] 1 2 3 4 5 6 7 8 9 10 ...\n $ rlabels         : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n $ cluster.method  : chr \"Prespecified\"\n $ equiv.fun       : chr \"None\"\n $ equiv.metric    : chr \"None\"\n - attr(*, \"class\")= chr \"blockmodel\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr$block <- pat_blk_mod$block.membership\nhead(pat_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 8\n  NAME                       GENDER RACE  MARITAL INCOME   AGE type    block\n  <chr>                      <chr>  <chr> <chr>    <dbl> <dbl> <chr>   <int>\n1 Avril120 Olson653          F      white <NA>    482269    36 PATIENT     1\n2 Norma469 Langosh790        F      white <NA>    190464    25 PATIENT     1\n3 Peggie783 Eichmann909      F      white <NA>     78997    21 PATIENT     1\n4 Ashlie138 Williamson769    F      white M         6472    37 PATIENT     1\n5 Christiane220 Ankunding277 F      white <NA>    141475    24 PATIENT     1\n6 Dione665 O'Kon634          F      white M       482269    36 PATIENT     1\n```\n:::\n\n```{.r .cell-code}\n#write.csv(pat_attr, \"pat_attr.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block(pat_blk_mod, main = \"patient\",\n           cex.lab = .000001)\n```\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\npatient.stat%v%\"role\"<-pat_blk_mod$block.membership[match(patient.stat%v%\"vertex.names\",pat_blk_mod$plabels)]\n#plot network using \"role\" to color nodes\nGGally::ggnet2(patient.stat,\n               node.color=\"role\", \n               node.size=sna::degree(patient.stat, gmode=\"graph\"),\n               node.alpha = .5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ade4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ade4' was built under R version 4.3.3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.adj.ig <- igraph::as_biadjacency_matrix(encounters.ig)\n\npatients_jaccard <- dist.binary(encounters.adj.ig,\n            method = 1, # method=1 Jaccard index\n            upper = TRUE,\n            diag = FALSE)\n\npatients_jaccard <- as.matrix(patients_jaccard)\ndiag(patients_jaccard) <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#binarize\npatients_jaccard_bi <- ifelse(patients_jaccard > 0.99, 1, 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph object\npatients_jaccard.ig <- graph_from_adjacency_matrix(patients_jaccard_bi, mode = \"undirected\")\npatients_jaccard.ig\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH 3caafa3 UN-- 121 6723 -- \n+ attr: name (v/c)\n+ edges from 3caafa3 (vertex names):\n [1] Akiko835 Larkin917--Anneliese170 Berge125  \n [2] Akiko835 Larkin917--Anthony633 Renner328   \n [3] Akiko835 Larkin917--Ashlie138 Williamson769\n [4] Akiko835 Larkin917--Avril120 Olson653      \n [5] Akiko835 Larkin917--Basil991 Hilll811      \n [6] Akiko835 Larkin917--Benjamin360 Hintz995   \n [7] Akiko835 Larkin917--Brendan864 MacGyver246 \n [8] Akiko835 Larkin917--Bula88 Prohaska837     \n+ ... omitted several edges\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(patients_jaccard.ig,  edge.width = 0.0002, edge.color = \"lightgray\",  vertex.size = 2, vertex.label = NA)\n```\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the igraph package\nlibrary(igraph)\n\n# Create an igraph object from the blockmodel\ng <- graph_from_adjacency_matrix(patient_matrix, mode = \"undirected\", weighted = FALSE)\n\n# Plot the graph without labels\nplot(g,      \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 2, \n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Patient Network\")\n```\n\n::: {.cell-output-display}\n![](post_3adjustment_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "post_3adjustment_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}