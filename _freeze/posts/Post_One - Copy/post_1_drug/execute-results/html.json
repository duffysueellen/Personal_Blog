{
  "hash": "ec40417130f855742328ada7c3b8228d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"POST 1\"\nsubtitle: \"Data Cleaning, Exploration, and Network Analysis\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-04-25\"\ncategories: [code, analysis]\n---\n\n\n*Research Question*\n\nDoes the demographic profile, including factors such as marital status, gender, and income, significantly impact the utilization of healthcare services among people who use drugs (PWUD), and does it influence the structure and strength of social network connections between PWUD and healthcare providers?\n\n*Hypothesis*\n\n1.  Demographic Disparities in Healthcare Utilization: PWUD from marginalized demographics, such as lower-income groups or minority populations, may have reduced access to healthcare services compared to PWUD from more privileged demographics.\n\n2.  Gender Differences in Healthcare Utilization: Gender may influence the type and frequency of healthcare services utilized by PWUD, with potential differences between male and female PWUD in accessing preventive care, substance abuse treatment, or mental health services. Additionally, the gender of providers may impact the type and frequency of healthcare service utilization among PWUD, with preferences or comfort levels potentially differing between male and female PWUD in seeking care from providers of the same or opposite gender.\n\n3.  Marital status may not only affect the size of social networks but also the type and frequency available within these networks, influencing healthcare-seeking behavior among PWUD.\n\n4.  Geographic Accessibility and Healthcare Utilization: Demographic factors may interact with geographic location, with PWUD in rural or underserved areas facing distinct challenges in accessing healthcare services compared to those in urban or well-served regions.\n\n5.  Healthcare Service Utilization as a Proxy for Overdose Risk: The utilization of a greater number of healthcare services among PWUD may serve as an indicator of increased risk of experiencing an overdose. This hypothesis suggests that PWUD who engage more frequently with healthcare services may be more likely to have experienced or be at higher risk of experiencing an overdose event, potentially due to underlying health issues, higher substance use severity, or other related factors.\n\n*Data Collection*\n\nData for this project were taken from Synthetic Mass, which creates Synthetic patient data from Synthea.\n\n![](SyntheticMassLogo.png)\n\nCriteria for patient download will be set to include patients that have experienced overdose, substance use treatment, and have other indicators in their health records that could be considered substance use.\n\nWhile a whole host of datasets are available within each download, I will focus this project on three datasets: patients.csv, providers.csv, and encounters.csv.\n\n-   Patients and Providers will be the actors analyzed. The patient and provider datasets contain information on the person level details, with names and some demographic information, with more detail available for patients than providers.\n\n-   Encounters will be the relationships analyzed. Encounters are appointments, visits, and clinical encounters and include notes on the visit including the date, reason, and cost breakdown.\n\n    -   **Reminder: none of this data is real**, it is synthetic, so the personally identifiable information I share is not data on real people and cannot be used to identify real people.\n\n*Data Cleaning*\n\nData for this project will be read in, reduced to only necessary data, cleaned (trim ws, recode variables, match across datasets, and other data cleaning processes)\n\n*Data Analysis*\n\nAnalysis will primarily be of a two-mode network, developing an analysis of the patient-provider relationship. Weights will be assigned to the number of visits between patients and providers. Block Modeling analysis will be performed in one-mode networks of patient or providers to understand the structure of the networks. Blocks will be assigned to patients and providers as an attribute for analysis.\n\n*Cleaning*\n\nThis post will primarily focus on data cleaning and data exploration with some exploration into social network analysis through transforming the data into an incidence matrix and plotting some attributes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(statnet)\nlibrary(ggplot2)\nlibrary(patchwork)\n```\n:::\n\n\n# Read in Patient, Provider, and Encounter Data\n\n## PATIENT DATA\n\nThe following table is the data available in the patient dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatients <- read_csv(\"synthea_sample_data_csv_latest/patients.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 86 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (19): Id, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, ...\ndbl   (6): FIPS, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE, INCOME\ndate  (2): BIRTHDATE, DEATHDATE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 27\n  Id      BIRTHDATE  DEATHDATE SSN    DRIVERS PASSPORT PREFIX FIRST LAST  SUFFIX\n  <chr>   <date>     <date>    <chr>  <chr>   <chr>    <chr>  <chr> <chr> <chr> \n1 fd7d27… 1986-07-11 NA        999-5… S99942… X400041… Mrs.   Anni… Glea… <NA>  \n2 cb36b3… 1958-12-12 NA        999-7… S99991… X680941… Mrs.   Juli… Barr… <NA>  \n3 757603… 1977-08-09 NA        999-7… S99974… X378787… Mrs.   Ales… Hean… <NA>  \n4 a970cc… 1997-07-04 NA        999-8… S99937… X401363… Ms.    Sand… Rice… <NA>  \n5 298741… 1979-05-05 NA        999-2… S99988… X201473… Mrs.   Mia3… Runt… <NA>  \n6 0863bd… 1997-11-12 NA        999-8… S99962… X675884… Mr.    Dami… Dach… <NA>  \n# ℹ 17 more variables: MAIDEN <chr>, MARITAL <chr>, RACE <chr>,\n#   ETHNICITY <chr>, GENDER <chr>, BIRTHPLACE <chr>, ADDRESS <chr>, CITY <chr>,\n#   STATE <chr>, COUNTY <chr>, FIPS <dbl>, ZIP <chr>, LAT <dbl>, LON <dbl>,\n#   HEALTHCARE_EXPENSES <dbl>, HEALTHCARE_COVERAGE <dbl>, INCOME <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [86 × 27] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Id                 : chr [1:86] \"fd7d2777-0aa7-4495-7355-7d57087f73b1\" \"cb36b365-bfa5-aa61-3240-ed97d2c7b7fa\" \"75760354-5f22-c391-cb3a-f7523b73277d\" \"a970cca2-8c88-a67a-8675-00aa26069356\" ...\n $ BIRTHDATE          : Date[1:86], format: \"1986-07-11\" \"1958-12-12\" ...\n $ DEATHDATE          : Date[1:86], format: NA NA ...\n $ SSN                : chr [1:86] \"999-54-2711\" \"999-75-6253\" \"999-70-3855\" \"999-86-9249\" ...\n $ DRIVERS            : chr [1:86] \"S99942559\" \"S99991886\" \"S99974938\" \"S99937640\" ...\n $ PASSPORT           : chr [1:86] \"X40004111X\" \"X68094169X\" \"X37878770X\" \"X40136308X\" ...\n $ PREFIX             : chr [1:86] \"Mrs.\" \"Mrs.\" \"Mrs.\" \"Ms.\" ...\n $ FIRST              : chr [1:86] \"Annice210\" \"Julianne852\" \"Alesha810\" \"Sandee884\" ...\n $ LAST               : chr [1:86] \"Gleason633\" \"Barrows492\" \"Heaney114\" \"Rice937\" ...\n $ SUFFIX             : chr [1:86] NA NA NA NA ...\n $ MAIDEN             : chr [1:86] \"Koss676\" \"Jacobs452\" \"Labadie908\" NA ...\n $ MARITAL            : chr [1:86] \"M\" \"W\" \"D\" NA ...\n $ RACE               : chr [1:86] \"white\" \"white\" \"white\" \"white\" ...\n $ ETHNICITY          : chr [1:86] \"nonhispanic\" \"nonhispanic\" \"nonhispanic\" \"nonhispanic\" ...\n $ GENDER             : chr [1:86] \"F\" \"F\" \"F\" \"F\" ...\n $ BIRTHPLACE         : chr [1:86] \"Wrentham  Massachusetts  US\" \"Yarmouth Port  Massachusetts  US\" \"East Harwich  Massachusetts  US\" \"Springfield  Massachusetts  US\" ...\n $ ADDRESS            : chr [1:86] \"288 Steuber Landing Suite 38\" \"782 Lynch Dale\" \"415 Emmerich Trail\" \"726 Harvey Throughway\" ...\n $ CITY               : chr [1:86] \"Brookline\" \"Hamilton\" \"Framingham\" \"Taunton\" ...\n $ STATE              : chr [1:86] \"Massachusetts\" \"Massachusetts\" \"Massachusetts\" \"Massachusetts\" ...\n $ COUNTY             : chr [1:86] \"Norfolk County\" \"Essex County\" \"Middlesex County\" \"Bristol County\" ...\n $ FIPS               : num [1:86] 25021 NA 25017 25005 NA ...\n $ ZIP                : chr [1:86] \"02446\" \"00000\" \"01701\" \"02767\" ...\n $ LAT                : num [1:86] 42.4 42.6 42.2 41.9 42.6 ...\n $ LON                : num [1:86] -71.1 -70.8 -71.5 -71.1 -71.4 ...\n $ HEALTHCARE_EXPENSES: num [1:86] 13891 1027127 1021095 80365 577671 ...\n $ HEALTHCARE_COVERAGE: num [1:86] 550582 224662 180027 159483 691055 ...\n $ INCOME             : num [1:86] 1565 39537 114339 96256 71238 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Id = col_character(),\n  ..   BIRTHDATE = col_date(format = \"\"),\n  ..   DEATHDATE = col_date(format = \"\"),\n  ..   SSN = col_character(),\n  ..   DRIVERS = col_character(),\n  ..   PASSPORT = col_character(),\n  ..   PREFIX = col_character(),\n  ..   FIRST = col_character(),\n  ..   LAST = col_character(),\n  ..   SUFFIX = col_character(),\n  ..   MAIDEN = col_character(),\n  ..   MARITAL = col_character(),\n  ..   RACE = col_character(),\n  ..   ETHNICITY = col_character(),\n  ..   GENDER = col_character(),\n  ..   BIRTHPLACE = col_character(),\n  ..   ADDRESS = col_character(),\n  ..   CITY = col_character(),\n  ..   STATE = col_character(),\n  ..   COUNTY = col_character(),\n  ..   FIPS = col_double(),\n  ..   ZIP = col_character(),\n  ..   LAT = col_double(),\n  ..   LON = col_double(),\n  ..   HEALTHCARE_EXPENSES = col_double(),\n  ..   HEALTHCARE_COVERAGE = col_double(),\n  ..   INCOME = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Id              BIRTHDATE            DEATHDATE         \n Length:86          Min.   :1918-12-18   Min.   :1980-02-04  \n Class :character   1st Qu.:1956-09-07   1st Qu.:1999-02-19  \n Mode  :character   Median :1973-07-22   Median :2007-02-09  \n                    Mean   :1971-05-21   Mean   :2005-05-07  \n                    3rd Qu.:1987-07-27   3rd Qu.:2016-01-04  \n                    Max.   :2004-12-24   Max.   :2021-09-26  \n                                         NA's   :73          \n     SSN              DRIVERS            PASSPORT            PREFIX         \n Length:86          Length:86          Length:86          Length:86         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n    FIRST               LAST              SUFFIX             MAIDEN         \n Length:86          Length:86          Length:86          Length:86         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   MARITAL              RACE            ETHNICITY            GENDER         \n Length:86          Length:86          Length:86          Length:86         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  BIRTHPLACE          ADDRESS              CITY              STATE          \n Length:86          Length:86          Length:86          Length:86         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n    COUNTY               FIPS           ZIP                 LAT       \n Length:86          Min.   :25001   Length:86          Min.   :41.55  \n Class :character   1st Qu.:25009   Class :character   1st Qu.:41.95  \n Mode  :character   Median :25017   Mode  :character   Median :42.31  \n                    Mean   :25015                      Mean   :42.21  \n                    3rd Qu.:25021                      3rd Qu.:42.46  \n                    Max.   :25027                      Max.   :42.82  \n                    NA's   :21                                        \n      LON         HEALTHCARE_EXPENSES HEALTHCARE_COVERAGE     INCOME      \n Min.   :-73.09   Min.   :   9291     Min.   :      0     Min.   :  1565  \n 1st Qu.:-71.45   1st Qu.:  39582     1st Qu.:  65610     1st Qu.: 30205  \n Median :-71.14   Median : 108692     Median : 322025     Median : 69924  \n Mean   :-71.27   Mean   : 206222     Mean   : 471978     Mean   :161151  \n 3rd Qu.:-70.97   3rd Qu.: 262415     3rd Qu.: 690279     3rd Qu.:128855  \n Max.   :-70.17   Max.   :1058955     Max.   :1893513     Max.   :840567  \n                                                                          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create NAME column combining FIRST and LAST names\npatients <- patients %>%\n    rename(PATIENT = Id) %>%\n  unite(NAME, FIRST, LAST, sep = \" \")\n\n#trim whitespace NAME\npatients$NAME <- trimws(patients$NAME)\n\n#trim whitespace COUNTY\npatients$CITY <- trimws(patients$CITY)\n\n#clean up GENDER, RACE, ETHNICITY, and INCOME sections\npatients <- patients %>%\n  mutate(\n    GENDER = tolower(GENDER),\n    GENDER = case_when(\n      GENDER %in% c(\"male\", \"m\", \"man\") ~ \"Male\",\n      GENDER %in% c(\"female\", \"f\", \"woman\") ~ \"Female\",\n      TRUE ~ NA_character_  # assign NA to any non-standard values\n    ),\n# city (patient)\n    CITY =tolower(CITY),\n# race (patient)\n    RACE = tolower(RACE),  # convert race to lower case for consistency\n\n# ethnicity (patient)\n    ETHNICITY = tolower(ETHNICITY),  # convert ethnicity to lower case for consistency\n\n# marital (patient)\n    MARITAL = ifelse(MARITAL == \"M\", \"Married\",\n                    ifelse(MARITAL == \"D\", \"Divorced\",\n                    ifelse(MARITAL == \"W\", \"Widowed\",\n                    ifelse(MARITAL == \"S\", \"Single\", MARITAL)))),\n\n# income (patient)\n    INCOME = as.numeric(INCOME)  # convert income to numeric if necessary\n  ) %>%\n  drop_na(GENDER, RACE) \n```\n:::\n\n\nI am only keeping the demographic data below (gender, race, marital status, income, and age) which will be used as an attribute for each patient.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Create AGE from BIRTHDATE\npatients <- patients %>%\n  mutate(\n    BIRTHDATE = as.Date(BIRTHDATE),  # Ensure 'dob' is in Date format\n    AGE = interval(BIRTHDATE, today()) / years(1)  # Calculate age in years\n  ) %>%\n  mutate(\n    AGE = floor(AGE)  # complete years only, removing decimal\n  )\n# Only keep patient name and demographics. This will be utilized as the attribute data for analysis.\npat_attr <- patients%>% \n  select(NAME, GENDER, RACE, MARITAL, CITY, INCOME, AGE)\nhead(pat_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  NAME                   GENDER RACE  MARITAL  CITY       INCOME   AGE\n  <chr>                  <chr>  <chr> <chr>    <chr>       <dbl> <dbl>\n1 Annice210 Gleason633   Female white Married  brookline    1565    37\n2 Julianne852 Barrows492 Female white Widowed  hamilton    39537    65\n3 Alesha810 Heaney114    Female white Divorced framingham 114339    46\n4 Sandee884 Rice937      Female white <NA>     taunton     96256    26\n5 Mia349 Runte676        Female white Divorced chelmsford  71238    45\n6 Damian46 Dach178       Male   white <NA>     swansea     74155    26\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_race <- ggplot(pat_attr,aes(RACE)) + geom_bar()\npat_gender <- ggplot(pat_attr,aes(GENDER)) + geom_bar()\n\npat_race + pat_gender + plot_annotation(title = \"Patient Race and Gender Breakdown\")\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(pat_attr,aes(MARITAL)) + geom_bar() + labs(title = \"Patient Marital Status\")\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\npat_income <- ggplot(pat_attr, aes(x = 1, y = INCOME)) +\n    geom_jitter(width = 0.2) +\n    labs(x = NULL, y = \"Income\") +\n    theme_minimal() + labs(title = \"Patient Income\")\n\nsummary(pat_attr$INCOME)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1565   30205   69924  161151  128855  840567 \n```\n\n\n:::\n\n```{.r .cell-code}\npat_age <- ggplot(pat_attr,aes(AGE)) + geom_bar()\n\nggplot(data = patients %>% \n         count(CITY) %>% \n         filter(n > 2),  # Filter for counts higher than 10\n       aes(x = CITY, y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Patients Cities\", \"\\n*filtered to show >2 Patients per City\"))\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n## PROVIDER DATA\n\nThe following table is the data available in the provider dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproviders <- read_csv(\"synthea_sample_data_csv_latest/providers.csv\") %>%\n    rename(PROVIDER = Id)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 815 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): Id, ORGANIZATION, NAME, GENDER, SPECIALITY, ADDRESS, CITY, STATE, ZIP\ndbl (4): LAT, LON, ENCOUNTERS, PROCEDURES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(providers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n  PROVIDER  ORGANIZATION NAME  GENDER SPECIALITY ADDRESS CITY  STATE ZIP     LAT\n  <chr>     <chr>        <chr> <chr>  <chr>      <chr>   <chr> <chr> <chr> <dbl>\n1 86726ad9… 74ab949d-17… Ted9… M      GENERAL P… 881 Ma… Fitc… MA    01420  42.6\n2 47fdff5b… 588f6ce6-b8… Tiff… F      GENERAL P… 461 WA… JAMA… MA    0213…  42.3\n3 b31700a0… 324b4137-57… Herm… F      GENERAL P… 134 NO… NORT… MA    0186…  42.6\n4 0ada8fec… b6398e07-49… Shan… M      GENERAL P… 19 TAC… WORC… MA    0160…  42.3\n5 31214beb… faffaf6a-ee… Jaun… F      GENERAL P… 66 WAS… STOU… MA    0207…  42.1\n6 38a7cc67… 17a4bae5-8b… Olym… F      GENERAL P… 512 MA… SHRE… MA    0154…  42.3\n# ℹ 3 more variables: LON <dbl>, ENCOUNTERS <dbl>, PROCEDURES <dbl>\n```\n\n\n:::\n:::\n\n\nI am only keeping the demographic data below (gender) which will be used as an attribute for each provider.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#trim whitespace NAME\nproviders$NAME <- trimws(providers$NAME)\nproviders <- providers %>%\n  mutate(\n    GENDER = tolower(GENDER),\n    GENDER = case_when(\n      GENDER %in% c(\"male\", \"m\", \"man\") ~ \"Male\",\n      GENDER %in% c(\"female\", \"f\", \"woman\") ~ \"Female\",\n      TRUE ~ NA_character_  # assign NA to any non-standard values\n    ),\n    CITY =tolower(CITY)\n  )\n```\n:::\n\n\n# DEEP CLEAN BREAK\n\nThere is an incompatibility issue with PROVIDER and ENCOUNTER data found later in the process, so I will clean it now to provide the best picture of demographics of the actual dataset.\n\n## ENCOUNTER DATA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters <- read_csv(\"synthea_sample_data_csv_latest/encounters.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6109 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): Id, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, DESCRI...\ndbl  (5): CODE, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASO...\ndttm (2): START, STOP\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(encounters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 15\n  Id       START               STOP                PATIENT ORGANIZATION PROVIDER\n  <chr>    <dttm>              <dttm>              <chr>   <chr>        <chr>   \n1 1b544ce… 2000-11-11 13:33:09 2000-11-11 14:33:09 fd7d27… db28cc9a-fd… 715b985…\n2 0d642d8… 2001-03-30 13:33:09 2001-03-30 14:33:09 fd7d27… db28cc9a-fd… 715b985…\n3 99d190e… 2001-11-28 13:33:09 2001-11-28 14:33:09 fd7d27… db28cc9a-fd… 715b985…\n4 cc07637… 2004-09-03 13:33:09 2004-09-03 14:31:19 fd7d27… 3d5fbf38-c7… 2655ff5…\n5 05a2433… 2005-09-09 13:33:09 2005-09-09 14:16:34 fd7d27… 3d5fbf38-c7… 2655ff5…\n6 8844f58… 2008-09-12 13:33:09 2008-09-12 14:28:22 fd7d27… 3d5fbf38-c7… 2655ff5…\n# ℹ 9 more variables: PAYER <chr>, ENCOUNTERCLASS <chr>, CODE <dbl>,\n#   DESCRIPTION <chr>, BASE_ENCOUNTER_COST <dbl>, TOTAL_CLAIM_COST <dbl>,\n#   PAYER_COVERAGE <dbl>, REASONCODE <dbl>, REASONDESCRIPTION <chr>\n```\n\n\n:::\n:::\n\n\n## Combine Patient, Provider, and Encounter Data\n\nI am taking this step here so that I have a master dataset (encounters_attributes) and so that I can create an edgelist more easily.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform a left join to merge encounters with provider_attributes based on PROVIDER\nencounters_cleaning <- left_join(encounters, providers, by = \"PROVIDER\")\n# Replace the PROVIDER column with the corresponding names from the NAME column\nencounters_cleaning$PROVIDER <- encounters_cleaning$NAME\n# Remove the NAME column if no longer needed\nencounters_cleaning <- encounters_cleaning %>%\n  select(-NAME)\n#Repeat for Provider\nencounters_cleaning <- left_join(encounters_cleaning, patients, by = \"PATIENT\")\nencounters_cleaning$PATIENT <- encounters_cleaning$NAME\nencounters_cleaning <- encounters_cleaning %>%\n  select(-NAME) \n#Clearly identify the Encounter ID\nencounters_cleaning <- encounters_cleaning %>%\n  rename(ENCOUNTER_ID = Id)\n```\n:::\n\n\n## Check Dimensions between Datasets\n\nIn later analysis I noticed that while there are more providers in the provider.csv, than there are providers listed in the encounters.csv. I will clean the data to only include providers that appear in the encounters.csv.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_prov <- encounters_cleaning %>%\n  group_by(PROVIDER, GENDER.x) %>%\n  summarize(COUNT = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PROVIDER'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_prov_enc <- providers %>% \n  group_by(NAME, PROVIDER)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(check_prov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 222   3\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(check_prov_enc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 815  13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform semi-join to keep providers present in both datasets\nproviders_only_in_providers_df <- check_prov_enc %>%\n  anti_join(check_prov, by = c(\"NAME\" = \"PROVIDER\"))\n\n# Print the dimensions of the filtered dataset\nprint(dim(providers_only_in_providers_df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 592  13\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(providers_only_in_providers_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 592 × 13\n# Groups:   NAME, PROVIDER [592]\n   PROVIDER ORGANIZATION NAME  GENDER SPECIALITY ADDRESS CITY  STATE ZIP     LAT\n   <chr>    <chr>        <chr> <chr>  <chr>      <chr>   <chr> <chr> <chr> <dbl>\n 1 47fdff5… 588f6ce6-b8… Tiff… Female GENERAL P… 461 WA… jama… MA    0213…  42.3\n 2 b31700a… 324b4137-57… Herm… Female GENERAL P… 134 NO… nort… MA    0186…  42.6\n 3 31214be… faffaf6a-ee… Jaun… Female GENERAL P… 66 WAS… stou… MA    0207…  42.1\n 4 38a7cc6… 17a4bae5-8b… Olym… Female GENERAL P… 512 MA… shre… MA    0154…  42.3\n 5 5b8e0a3… 4112b8b1-59… Ambr… Male   GENERAL P… 37 ROU… sand… MA    0256…  41.8\n 6 5cb9747… e76b5eb0-0c… Gise… Female GENERAL P… 1400 V… west… MA    02132  42.3\n 7 633f248… c241b977-41… Kip4… Male   GENERAL P… 94 MAI… hyan… MA    0260…  41.7\n 8 4886d4a… ef5390b4-cb… Mila… Male   GENERAL P… 360 ME… mald… MA    0214…  42.4\n 9 774bf03… 6fafb5d4-ec… Shel… Female GENERAL P… 320 WE… west… MA    02379  42.0\n10 f4e1828… aa682136-a4… Ánge… Female GENERAL P… 501 CO… norw… MA    0206…  42.2\n# ℹ 582 more rows\n# ℹ 3 more variables: LON <dbl>, ENCOUNTERS <dbl>, PROCEDURES <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform anti-join to remove providers only present in check_prov_enc from the original dataset\nproviders_filtered <- providers %>%\n  anti_join(providers_only_in_providers_df, by = c(\"NAME\" = \"NAME\"))\n\n# Print the dimensions of the resulting dataset\nprint(dim(providers_filtered))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 223  13\n```\n\n\n:::\n:::\n\n\nResult is 223, though it should be 222.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find duplicate rows based on the NAME column\nduplicate_rows <- providers_filtered[duplicated(providers_filtered$NAME) | duplicated(providers_filtered$NAME, fromLast = TRUE), ]\n\n# Print the duplicate rows\nprint(duplicate_rows %>% select(PROVIDER, CITY))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  PROVIDER                             CITY      \n  <chr>                                <chr>     \n1 be12b8b5-2618-3d5e-a976-199d56505cd0 leominster\n2 8e8ca291-3456-359b-9a13-0a6dc7016381 reading   \n```\n\n\n:::\n:::\n\n\nAh Maynard.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find duplicate rows based on the NAME column\nMaynard_rows <- encounters_cleaning %>% filter (PROVIDER == \"Maynard46 Buckridge80\")\n\n# Print the duplicate rows\nprint(Maynard_rows %>% group_by(CITY.x)) %>% select(PROVIDER, CITY.x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 22 × 51\n# Groups:   CITY.x [1]\n   ENCOUNTER_ID   START               STOP                PATIENT ORGANIZATION.x\n   <chr>          <dttm>              <dttm>              <chr>   <chr>         \n 1 a4e40cc3-e8e2… 1958-10-16 18:06:02 1958-10-16 18:51:39 Tommy8… 817f4acb-0184…\n 2 64f7e2f4-4fef… 1960-10-27 18:06:02 1960-10-27 18:47:34 Tommy8… 817f4acb-0184…\n 3 c194d751-9164… 1978-11-16 18:06:02 1978-11-16 18:49:04 Tommy8… 817f4acb-0184…\n 4 8f814ff1-65a5… 1979-11-22 18:06:02 1979-11-22 18:47:03 Tommy8… 817f4acb-0184…\n 5 d99e97ef-b857… 1981-12-03 18:06:02 1981-12-03 19:01:22 Tommy8… 817f4acb-0184…\n 6 c3a214d7-4f71… 1982-12-09 18:06:02 1982-12-09 19:00:00 Tommy8… 817f4acb-0184…\n 7 4a9f1c7b-574c… 1985-12-26 18:06:02 1985-12-26 18:51:22 Tommy8… 817f4acb-0184…\n 8 e8e4f402-08a2… 1987-01-01 18:06:02 1987-01-01 18:46:31 Tommy8… 817f4acb-0184…\n 9 24e91e6e-4ec8… 1989-01-12 18:06:02 1989-01-12 18:38:56 Tommy8… 817f4acb-0184…\n10 83cc31e3-4efc… 1991-01-24 18:06:02 1991-01-24 19:02:22 Tommy8… 817f4acb-0184…\n# ℹ 12 more rows\n# ℹ 46 more variables: PROVIDER <chr>, PAYER <chr>, ENCOUNTERCLASS <chr>,\n#   CODE <dbl>, DESCRIPTION <chr>, BASE_ENCOUNTER_COST <dbl>,\n#   TOTAL_CLAIM_COST <dbl>, PAYER_COVERAGE <dbl>, REASONCODE <dbl>,\n#   REASONDESCRIPTION <chr>, ORGANIZATION.y <chr>, GENDER.x <chr>,\n#   SPECIALITY <chr>, ADDRESS.x <chr>, CITY.x <chr>, STATE.x <chr>,\n#   ZIP.x <chr>, LAT.x <dbl>, LON.x <dbl>, ENCOUNTERS <dbl>, …\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 22 × 2\n# Groups:   CITY.x [1]\n   PROVIDER              CITY.x \n   <chr>                 <chr>  \n 1 Maynard46 Buckridge80 reading\n 2 Maynard46 Buckridge80 reading\n 3 Maynard46 Buckridge80 reading\n 4 Maynard46 Buckridge80 reading\n 5 Maynard46 Buckridge80 reading\n 6 Maynard46 Buckridge80 reading\n 7 Maynard46 Buckridge80 reading\n 8 Maynard46 Buckridge80 reading\n 9 Maynard46 Buckridge80 reading\n10 Maynard46 Buckridge80 reading\n# ℹ 12 more rows\n```\n\n\n:::\n:::\n\n\nI'll choose the Maynard in Reading and remove the Maynard in Leominster.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproviders_filtered <- providers_filtered %>%\n  filter(PROVIDER != \"be12b8b5-2618-3d5e-a976-199d56505cd0\")\n# Print the dimensions of the resulting dataset\nprint(dim(providers_filtered))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 222  13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_pat <- encounters_cleaning %>%\n  group_by(PATIENT, GENDER.y) %>%\n  summarize(COUNT = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PATIENT'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_pat_enc <- patients %>%\n  group_by(NAME,PATIENT)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(check_pat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 86  3\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(check_pat_enc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 86 27\n```\n\n\n:::\n:::\n\n\nPatients have the same dimensions.\n\n# Back to the Regularly Scheduled Data Cleaning\n\n## PATIENT DATA 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(providers_filtered, aes(GENDER)) +geom_bar() + labs(title = \"Provider Gender Breakdown\")\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = providers_filtered %>% \n         count(CITY) %>% \n         filter(n > 5),  # Filter for counts higher than 10\n       aes(x = CITY, y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Provider Cities\", \"\\n*filtered to show >5 Providers per City\"))\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-21-2.png){width=672}\n:::\n:::\n\n\n## ENCOUNTER DATA 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(encounters, aes(ENCOUNTERCLASS)) + geom_bar() + coord_flip()+ labs(title = \"Type of Visit\")\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = encounters %>% \n         count(DESCRIPTION) %>% \n         filter(n > 50),  # Filter for counts higher than 10\n       aes(x = DESCRIPTION, y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Visit Description\", \"\\n*filtered to show >50 visits\"))\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = encounters %>% \n         count(REASONDESCRIPTION) %>% \n         filter(n > 50),  # Filter for counts higher than 10\n       aes(x = reorder(REASONDESCRIPTION, n), y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Reason Patient Visited Provider\", \"\\n*filtered to show >50 visits\"))\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-22-3.png){width=672}\n:::\n:::\n\n\nAside from NA (which does not stand for Narcotics Anonymous) the most frequent reason a patient visits a provider is for \"Dependent drug abuse (disorder)\". This is exactly what I would have anticipated seeing in this dataset, considering I called for only patients with a high likelyhood of being drug dependent.\n\nThe second most frequent reason for visiting a provider is \"Chronic kidney disease stage 4 (disorder)\". One insight I have been given is that kidney disease may involve a lot of trips to the doctors for dialysis. I may look into this dataset to see if I'm right, but this is more a side tangent.\n\n## Join Datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform a left join to merge encounters with provider_attributes based on PROVIDER\nencounters_cleaned <- left_join(encounters, providers_filtered, by = \"PROVIDER\")\n# Replace the PROVIDER column with the corresponding names from the NAME column\nencounters_cleaned$PROVIDER <- encounters_cleaned$NAME\n# Remove the NAME column if no longer needed\nencounters_cleaned <- encounters_cleaned %>%\n  select(-NAME)\n#Repeat for Provider\nencounters_cleaned <- left_join(encounters_cleaned, patients, by = \"PATIENT\")\nencounters_cleaned$PATIENT <- encounters_cleaned$NAME\nencounters_cleaned <- encounters_cleaned %>%\n  select(-NAME) \n#Clearly identify the Encounter ID\nencounters_cleaned <- encounters_cleaned %>%\n  rename(ENCOUNTER_ID = Id)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounter_attributes <- encounters_cleaned %>%\n  select(ENCOUNTER_ID, PATIENT, PROVIDER, GENDER.x, GENDER.y, RACE, MARITAL, ETHNICITY, INCOME, CITY.x, CITY.y)\n# View the updated dataframe\nhead(encounter_attributes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  ENCOUNTER_ID PATIENT PROVIDER GENDER.x GENDER.y RACE  MARITAL ETHNICITY INCOME\n  <chr>        <chr>   <chr>    <chr>    <chr>    <chr> <chr>   <chr>      <dbl>\n1 1b544ceb-bf… Annice… Clement… Male     Female   white Married nonhispa…   1565\n2 0d642d81-96… Annice… Clement… Male     Female   white Married nonhispa…   1565\n3 99d190e1-67… Annice… Clement… Male     Female   white Married nonhispa…   1565\n4 cc076374-d3… Annice… Enrique… Female   Female   white Married nonhispa…   1565\n5 05a24332-4d… Annice… Enrique… Female   Female   white Married nonhispa…   1565\n6 8844f58d-3e… Annice… Enrique… Female   Female   white Married nonhispa…   1565\n# ℹ 2 more variables: CITY.x <chr>, CITY.y <chr>\n```\n\n\n:::\n:::\n\n\n## EDGELIST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Edgelist & Assign Weight by Count of Encounter\nencounters_el <- encounter_attributes %>%\n  group_by(PATIENT, PROVIDER) %>%\n  summarize(COUNT = n()) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PATIENT'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(encounters_el)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n# Groups:   PATIENT [2]\n  PATIENT             PROVIDER                  COUNT\n  <chr>               <chr>                     <int>\n1 Adam631 Hoppe518    Elijah719 White193            8\n2 Adam631 Hoppe518    Fidel864 Swift555             2\n3 Adam631 Hoppe518    Virgen207 Hyatt152            3\n4 Adam631 Hoppe518    Zachery872 Pagac496          31\n5 Alesha810 Heaney114 Kristopher775 Schiller186    13\n6 Alesha810 Heaney114 Laine739 Torphy630            4\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(encounters_el)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 341   3\n```\n\n\n:::\n:::\n\n\n## COMBINED ATTRIBUTE LIST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combine pro and pat attr\npat_attr$type <- \"PATIENT\"\npro_attr <- providers_filtered %>%\n  select(NAME, GENDER, CITY)\npro_attr$type <- \"PROVIDER\"\nboth_attr <- bind_rows(pat_attr, pro_attr)\nhead(both_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  NAME                   GENDER RACE  MARITAL  CITY       INCOME   AGE type   \n  <chr>                  <chr>  <chr> <chr>    <chr>       <dbl> <dbl> <chr>  \n1 Annice210 Gleason633   Female white Married  brookline    1565    37 PATIENT\n2 Julianne852 Barrows492 Female white Widowed  hamilton    39537    65 PATIENT\n3 Alesha810 Heaney114    Female white Divorced framingham 114339    46 PATIENT\n4 Sandee884 Rice937      Female white <NA>     taunton     96256    26 PATIENT\n5 Mia349 Runte676        Female white Divorced chelmsford  71238    45 PATIENT\n6 Damian46 Dach178       Male   white <NA>     swansea     74155    26 PATIENT\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create combined attribute list\nattribute_list <- do.call(list, both_attr)\n```\n:::\n\n\n## NETWORK\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create bipartite network with attributes\nencounters.st.3 <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\nencounters.st.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Network attributes:\n  vertices = 308 \n  directed = FALSE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = 86 \n  total edges= 341 \n    missing edges= 0 \n    non-missing edges= 341 \n\n Vertex attribute names: \n    AGE CITY GENDER INCOME MARITAL NAME RACE type vertex.names \n\n Edge attribute names: \n    COUNT \n```\n\n\n:::\n:::\n\n\n# Graph Section\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincidence_graph <- graph_from_biadjacency_matrix(encounters.st.3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a graph from the edgelist\ng <- graph_from_data_frame(encounters_el, \n                                        directed = FALSE)\nmap_g <- bipartite_mapping(g)\nhead(map_g$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(map_g$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Adam631 Hoppe518     Alesha810 Heaney114 Alissa315 Altenwerth646 \n                  FALSE                   FALSE                   FALSE \n   Analisa263 Kohler843    Annice210 Gleason633     Anthony633 Kutch271 \n                  FALSE                   FALSE                   FALSE \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign overall Graph Color Scheme for Consistency\n\n# Assign vertex attributes\nV(g)$type <- c(rep(\"PATIENT\", n_distinct(encounters_el$PATIENT)), \n                             rep(\"PROVIDER\", n_distinct(encounters_el$PROVIDER)))\n\nvertex_colors <- ifelse(attribute_list$GENDER == \"Female\", \"pink\", \"turquoise\")\n\nvertex_shape <- ifelse(V(g)$type == \"PATIENT\", \"circle\", \"square\")\n# Find the range of counts in the graph\ncount_range <- range(E(g)$COUNT)\n\n# Define the edge widths based on the counts\nedge_widths <- ifelse(E(g)$COUNT < 5, 1,\n                      ifelse(E(g)$COUNT < 20, 50,\n                             3 * (E(g)$COUNT - count_range[1]) / (count_range[2] - count_range[1])))\n\n\nedge_widths <- ifelse(E(g)$COUNT < 5, 0.5, \n                      ifelse(E(g)$COUNT < 20, .8, \n                             ifelse(E(g)$COUNT < 50, 1, 1.5)))\nedge_colors <- ifelse(E(g)$COUNT < 5, \"lightblue\", \n                      ifelse(E(g)$COUNT <= 20, \"blue\",\n                             ifelse(E(g)$COUNT <= 100, \"darkblue\",\"red\")))\nedge_widths <- edge_widths *3\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(g, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 5, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     edge.width = edge_widths,\n     edge.color = edge_colors,\n     main = \"Network of Encounters and Gender\")\n# Define legend for vertex colors\nlegend(\"bottomright\",\n       legend = c(\"Female\", \"Male\"),\n       fill = c(\"pink\", \"turquoise\"))     \n\n# Define legend for vertex shapes\nlegend(\"right\",\n       legend = c(\"Patient\", \"Provider\"), \n       pch = c(1, 0))\n\n# Define legend for edge colors\nlegend(\"topright\",\n       legend = c(\"1-4\", \"5-19\", \"20-99\", \"100+\"),  # You can customize these labels\n       col = c(\"lightblue\", \"blue\",\"darkblue\", \"red\"),  # Line colors corresponding to edge colors\n       lwd = 2,                            # Line width\n       title = \"Edges: # of Visits\")              # Legend title\n```\n\n::: {.cell-output-display}\n![](post_1_drug_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nThis graph shows a myriad of patient, provider relationships. One provider seems to be at the center of the graph, having the most edges reaching out to different patients. This central provider sees many patients only 1-4 times (indicated in yellow).\n\nWe see many providers close to the center that also have blue and red edges, indicating that they see 5-19 patients (blue) or more than 20 patients (red).\n\nThere are also many patients and providers that are not linked into the larger group, with pairings of one patient and one provider, one patient and two providers, one patient and three providers, two patients and three providers, two patients and four providers, and so on.\n\nMy next steps will include looking more deeply at these relationships through blocking, filtering, and density analysis.\n\nNote To Self\n\nTO DO: - consider ego centric network - clean up any other aspect for analysis - analysis across Marital status - can X reason for hospital visit predict where you go to your next visit? - analyze the block structure and look for attributes - sort by block x and look for matrixes there - also centrality\n\n\n::: {.cell}\n\n```{.r .cell-code}\nOVERDOSE <- encounters_cleaned %>%\n  filter(REASONDESCRIPTION == \"Drug overdose\") %>%\n  group_by(PATIENT) %>%\n  summarize(COUNT = n())\n```\n:::\n\n\nUse to write CSV\n\n#write csv\n\nwrite.csv(pat_attr, \"pat_attr.csv\")\n\nwrite.csv(pro_attr, \"pro_attr.csv\")\n\nwrite.csv(encounters_cleaning, \"encounters_cleaning.csv\")\n\nwrite.csv(encounters_cleaned, \"encounters_cleaned.csv\")\n\nwrite.csv(encounter_attributes, \"encounter_attributes.csv\")\n\nwrite.csv(attribute_list, \"attribute_list.csv\")\n\nwrite.csv(encounters_el, \"encounters_el.csv\")\n\nwrite.csv(encounters.st.3, \"encounters.st.3.csv\")\n",
    "supporting": [
      "post_1_drug_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}