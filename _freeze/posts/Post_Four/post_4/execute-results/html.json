{
  "hash": "e6c16ffe0de72737dcd4682a7011e149",
  "result": {
    "markdown": "---\ntitle: \"Network Block Modeling - Providers\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-04-25\"\ncategories: [code, analysis, block_model]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(intergraph)\nlibrary(ggplot2)\n```\n:::\n\n\nThis post will explore the Synthetic Mass network data in more detail.\n\n# Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr <- read_csv(\"post1_data/pat_attr.csv\", \n    col_types = cols(...1 = col_skip()))\npro_attr <- read_csv(\"post1_data/pro_attr.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaning <- read_csv(\"post1_data//encounters_cleaning.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaned <- read_csv(\"post1_data//encounters_cleaned.csv\", \n    col_types = cols(...1 = col_skip()))\nencounter_attributes <- read_csv(\"post1_data/encounter_attributes.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_el  <- read_csv(\"post1_data/encounters_el.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_st_3 <- read_csv(\"post1_data/encounters.st.3.csv\", \n    col_types = cols(...1 = col_skip()))\nattribute_list <- read.csv(\"post1_data/attribute_list.csv\")\n```\n:::\n\n\n# Create bipartite network with attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph\nencounters.ig <- graph_from_biadjacency_matrix(encounters.stat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat2 <- asNetwork(encounters.ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprojected_graph <- bipartite_projection(encounters.ig)\nprovider_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj2))\n\nprovider.stat <- asNetwork(projected_graph$proj2)\n\nprovider.se <- equiv.clust(provider_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n\nnames(provider.se)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"cluster\"        \"metric\"         \"equiv.fun\"      \"cluster.method\"\n[5] \"glabels\"        \"plabels\"       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(provider.se, main = \"provider\")\nrect.hclust(provider.se$cluster, k = 12)\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nblk_model.provider.org <- blockmodel(provider_matrix,\n provider.se, k = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n blk_model.provider.org$block.model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Block 1   Block 2     Block 3    Block 4    Block 5    Block 6\nBlock 1 0.013527738 0.2995595 0.001762115 0.00715859 0.07929515 0.05286344\nBlock 2 0.299559471       NaN 0.400000000 1.00000000 1.00000000 1.00000000\nBlock 3 0.001762115 0.4000000 0.476190476 0.00000000 0.00000000 0.00000000\nBlock 4 0.007158590 1.0000000 0.000000000 0.75000000 0.00000000 0.37500000\nBlock 5 0.079295154 1.0000000 0.000000000 0.00000000        NaN 0.00000000\nBlock 6 0.052863436 1.0000000 0.000000000 0.37500000 0.00000000        NaN\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block<-function(x=blk_mod, main=NULL, cex.lab=.00001,show_labels = FALSE){\n plot.sociomatrix(x$blocked.data, labels=list(x$plabels,x$plabels),\n main=main, drawlines = FALSE, cex.lab=cex.lab)\n for (j in 2:length(x$plabels)) if (x$block.membership[j] !=\n x$block.membership[j-1])\n abline(v = j- 0.5, h = j- 0.5, lty = 3, xpd=FALSE)\n }\n \nplot.block(blk_model.provider.org, main = \"provider\")\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#prov_blks6 <- blockmodeling::optRandomParC(provider_matrix, k=6, rep=10, approaches=\"ss\", blocks=\"com\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the prov_blks6 object to a file\n#saveRDS(prov_blks6, \"prov_blks6_results.rds\")\n\n# Later, when you want to use it again, you can read it back into R\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\nprov_blk_mod <- blockmodel(provider_matrix, prov_blks6$best$best1$clu,\n                      plabels = rownames(provider_matrix))\n# print blockmodel object\nprov_blk_mod$block.model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Block 1     Block 2 Block 3     Block 4     Block 5     Block 6\nBlock 1 1.000000000 0.000000000   1.000 0.008333333 0.400000000 0.000000000\nBlock 2 0.000000000 0.800000000   0.600 0.001388889 0.000000000 0.010828025\nBlock 3 1.000000000 0.600000000     NaN 1.000000000 0.125000000 0.000000000\nBlock 4 0.008333333 0.001388889   1.000 0.053208138 0.000000000 0.004777070\nBlock 5 0.400000000 0.000000000   0.125 0.000000000 0.142857143 0.002388535\nBlock 6 0.000000000 0.010828025   0.000 0.004777070 0.002388535 0.015515270\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(prov_blk_mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 11\n $ block.membership: int [1:253] 1 1 1 1 1 2 2 2 2 2 ...\n $ order.vector    : int [1:253] 29 39 76 112 208 20 23 24 25 26 ...\n $ block.content   : chr \"density\"\n $ blocked.data    : num [1:253, 1:253] 0 1 1 1 1 0 0 0 0 0 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:253] \"Yesenia104 Wilderman619\" \"Floy720 Greenfelder433\" \"Vito638 Barton704\" \"Omer483 Koepp521\" ...\n  .. ..$ : chr [1:253] \"Yesenia104 Wilderman619\" \"Floy720 Greenfelder433\" \"Vito638 Barton704\" \"Omer483 Koepp521\" ...\n $ block.model     : num [1:6, 1:6] 1 0 1 0.00833 0.4 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n  .. ..$ : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n $ plabels         : chr [1:253] \"Yesenia104 Wilderman619\" \"Floy720 Greenfelder433\" \"Vito638 Barton704\" \"Omer483 Koepp521\" ...\n $ glabels         : int [1:253] 1 2 3 4 5 6 7 8 9 10 ...\n $ rlabels         : chr [1:6] \"Block 1\" \"Block 2\" \"Block 3\" \"Block 4\" ...\n $ cluster.method  : chr \"Prespecified\"\n $ equiv.fun       : chr \"None\"\n $ equiv.metric    : chr \"None\"\n - attr(*, \"class\")= chr \"blockmodel\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npro_attr$block <- prov_blk_mod$block.membership \n\nhead(pro_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 5\n  NAME                      GENDER CITY         type     block\n  <chr>                     <chr>  <chr>        <chr>    <int>\n1 Ted955 Reilly981          M      Fitchburg    PROVIDER     1\n2 Barbara209 Maldonado119   F      LEOMINSTER   PROVIDER     1\n3 Gisele901 Lehner980       F      West Roxbury PROVIDER     1\n4 Vella930 Ankunding277     F      FALL RIVER   PROVIDER     1\n5 Precious140 Runolfsson901 F      NORWELL      PROVIDER     1\n6 Fernande593 Mosciski958   F      E FALMOUTH   PROVIDER     2\n```\n:::\n\n```{.r .cell-code}\nwrite.csv(pro_attr, \"pro_attr.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block(prov_blk_mod, main = \"Provider 6 Block Model\",\n           cex.lab = .000001)\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\nprovider.stat%v%\"role\"<-prov_blk_mod$block.membership[match(provider.stat%v%\"vertex.names\",prov_blk_mod$plabels)]\n#plot network using \"role\" to color nodes\nGGally::ggnet2(provider.stat,\n               node.color=\"role\", \n               node.size=sna::degree(provider.stat, gmode=\"graph\"),\n               node.alpha = .5)  + ggtitle(\"Provider 6 Block Model Network\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#blks2 <- blockmodeling::optRandomParC(provider_matrix, k=12, rep=10, approaches=\"ss\", blocks=\"com\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the blks2 object to a file\n#saveRDS(blks2, \"blks2_results.rds\")\n\n# Later, when you want to use it again, you can read it back into R\nblks2 <- readRDS(\"blks2_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# blockmodel with optimized partition\nblks2_mod <- blockmodel(provider_matrix, blks2$best$best1$clu,\n                      plabels = rownames(provider_matrix))\n# print blockmodel object\nblks2_mod$block.model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Block 1 Block 2     Block 3    Block 4     Block 5     Block 6\nBlock 1        NaN    0.00 1.000000000 1.00000000 0.000000000 0.600000000\nBlock 2  0.0000000    0.20 0.000000000 0.00000000 0.000000000 0.240000000\nBlock 3  1.0000000    0.00 0.272727273 0.04545455 0.007667032 0.009090909\nBlock 4  1.0000000    0.00 0.045454545 0.86666667 0.014056225 0.000000000\nBlock 5  0.0000000    0.00 0.007667032 0.01405622 0.022627094 0.002409639\nBlock 6  0.6000000    0.24 0.009090909 0.00000000 0.002409639 0.800000000\nBlock 7  1.0000000    0.00 0.000000000 0.00000000 0.007831325 0.000000000\nBlock 8  0.0000000    0.00 0.000000000 0.02000000 0.000000000 0.000000000\nBlock 9  1.0000000    0.00 0.000000000 0.00000000 0.007530120 0.000000000\nBlock 10 0.0000000    0.00 0.000000000 0.00000000 0.002409639 0.060000000\nBlock 11 0.0000000    0.00 0.000000000 0.00000000 0.002259036 0.000000000\nBlock 12 0.1666667    0.00 0.000000000 0.00000000 0.016064257 0.000000000\n             Block 7    Block 8    Block 9    Block 10    Block 11   Block 12\nBlock 1  1.000000000 0.00000000 1.00000000 0.000000000 0.000000000 0.16666667\nBlock 2  0.000000000 0.00000000 0.00000000 0.000000000 0.000000000 0.00000000\nBlock 3  0.000000000 0.00000000 0.00000000 0.000000000 0.000000000 0.00000000\nBlock 4  0.000000000 0.02000000 0.00000000 0.000000000 0.000000000 0.00000000\nBlock 5  0.007831325 0.00000000 0.00753012 0.002409639 0.002259036 0.01606426\nBlock 6  0.000000000 0.00000000 0.00000000 0.060000000 0.000000000 0.00000000\nBlock 7  0.268421053 0.00000000 0.00250000 0.000000000 0.000000000 0.00000000\nBlock 8  0.000000000 0.04979592 0.00000000 0.000000000 0.012500000 0.00000000\nBlock 9  0.002500000 0.00000000 0.07564103 0.000000000 0.000000000 0.03750000\nBlock 10 0.000000000 0.00000000 0.00000000 0.700000000 0.000000000 0.00000000\nBlock 11 0.000000000 0.01250000 0.00000000 0.000000000 0.200000000 0.00000000\nBlock 12 0.000000000 0.00000000 0.03750000 0.000000000 0.000000000 0.86666667\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.block(blks2_mod, main = \"Provider 12 Block Model\",\n           cex.lab = .000001)\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assign block membership to vertex attribute\nprovider.stat%v%\"role2\"<-blks2_mod$block.membership[match(provider.stat%v%\"vertex.names\",blks2_mod$plabels)]\n#plot network using \"role\" to color nodes\nGGally::ggnet2(provider.stat,\n               node.color=\"role2\", \n               node.size=sna::degree(provider.stat, gmode=\"graph\"),\n               node.alpha = .5) + ggtitle(\"Provider 12 Block Model Network\")\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nWith 12 distinct blocks, I start to loose definition of the exterior and interior. Notice the green color mixed in close to the center and tied with gray nodes in the outer ring. This is too many blocks, 6 defines more visually appealing divisions. Additional analysis will need to be done to understand if these blocks can actually be defined by anything other than ties. Onto deeper exploration of blocks...\n\n#Next Steps Jaccard similarity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ade4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ade4' was built under R version 4.3.3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.adj.ig <- igraph::as_biadjacency_matrix(encounters.ig)\n\nproviders_jaccard <- dist.binary(t(encounters.adj.ig),\n            method = 1, # method=1 Jaccard index\n            upper = TRUE,\n            diag = FALSE)\n\n\nproviders_jaccard <- as.matrix(providers_jaccard)\ndiag(providers_jaccard) <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#binarize\nproviders_jaccard_bi <- ifelse(providers_jaccard > 0.99, 1, 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create igraph object\nproviders_jaccard.ig <- graph_from_adjacency_matrix(providers_jaccard_bi, mode = \"undirected\")\nproviders_jaccard.ig\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH 5606312 UN-- 253 31324 -- \n+ attr: name (v/c)\n+ edges from 5606312 (vertex names):\n [1] Emilio417 Barton704--Althea11 Ankunding277\n [2] Emilio417 Barton704--Jerrell6 Rippin620   \n [3] Emilio417 Barton704--Linette249 Runte676  \n [4] Emilio417 Barton704--Irene779 Garza151    \n [5] Emilio417 Barton704--Randy380 Bergstrom287\n [6] Emilio417 Barton704--Booker670 Casper496  \n [7] Emilio417 Barton704--Brock407 VonRueden376\n [8] Emilio417 Barton704--Chang901 Kutch271    \n+ ... omitted several edges\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(providers_jaccard.ig,  edge.width = 0.0002, edge.color = \"lightgray\",  vertex.size = 2, vertex.label = NA)\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the igraph package\nlibrary(igraph)\n\n# Create an igraph object from the blockmodel\ng <- graph_from_adjacency_matrix(provider_matrix, mode = \"undirected\", weighted = FALSE)\n\n# Plot the graph without labels\nplot(g,      layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 2, \n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     main = \"Provider Network\")\n```\n\n::: {.cell-output-display}\n![](post_4_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "post_4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}