{
  "hash": "b3e6a8379e684acecaa074707c36ac53",
  "result": {
    "markdown": "---\ntitle: \"POST 11\"\nsubtitle: \"mostly notes\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-05-05\"\ncategories: [code, analysis, block_model]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(intergraph)\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tmap)\nlibrary(tigris)\nlibrary(stplanr)\n```\n:::\n\n\nThis post will explore the Provider Network\n\n# Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npat_attr <- read_csv(\"post5drug_data/pat_attr.csv\", \n    col_types = cols(...1 = col_skip()))\npro_attr <- read_csv(\"post5drug_data/pro_attr.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaning <- read_csv(\"post5drug_data//encounters_cleaning.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_cleaned <- read_csv(\"post5drug_data//encounters_cleaned.csv\", \n    col_types = cols(...1 = col_skip()))\nencounter_attributes <- read_csv(\"post5drug_data/encounter_attributes.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_el  <- read_csv(\"post5drug_data/encounters_el.csv\", \n    col_types = cols(...1 = col_skip()))\nencounters_st_3 <- read_csv(\"post5drug_data/encounters.st.3.csv\", \n    col_types = cols(...1 = col_skip()))\nattribute_list <- read.csv(\"post5drug_data/attribute_list.csv\")\npat_blks6 <- readRDS(\"pat_blks6_results.rds\")\nprov_blks6 <- readRDS(\"prov_blks6_results.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.stat <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\n\nencounters.ig <- graph_from_biadjacency_matrix(encounters.stat)\n\nprojected_graph <- bipartite_projection(encounters.ig)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider_matrix <- as.matrix(as_adjacency_matrix(projected_graph$proj2))\nlibrary(statnet)\nprovider.stat <- asNetwork(projected_graph$proj2)\nprovider.ig <- graph_from_biadjacency_matrix(provider.stat)\ndetach(\"package:igraph\")\nprovider.se <- equiv.clust(provider_matrix,\n equiv.fun = \"sedist\",\n method = \"hamming\",\n mode = \"graph\",\n cluster.method = \"complete\")\n```\n:::\n\n\n# ANALYSIS\n\n## Encounters Network\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngden(encounters.stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.007212657\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::transitivity(encounters.ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::components(encounters.ig)$no\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters.nodes <- data.frame(\n  degree = round(sna::degree(encounters.stat, gmode = \"digraph\"), 2),\n  degree.wt = round(igraph::strength(encounters.ig), 2),\n  betweenness = round(sna::betweenness(encounters.stat, gmode = \"digraph\"), 2),\n  close = round(sna::closeness(encounters.stat, cmode = \"suminvdir\"), 2),\n  constraint = round(igraph::constraint(encounters.ig), 2)\n)\n\nhead(encounters.nodes, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        degree degree.wt betweenness close constraint\nAdam631 Hoppe518             8         4      687.13  0.13       0.25\nAlesha810 Heaney114          6         3       18.00  0.01       0.33\nAlissa315 Altenwerth646      8         4     2789.23  0.19       0.25\nAnalisa263 Kohler843         8         4     1248.00  0.13       0.25\nAnnice210 Gleason633         6         3      419.00  0.12       0.33\nAnthony633 Kutch271          6         3       18.00  0.01       0.33\nBenedict104 Hintz995         4         2        1.00  0.01       0.50\nCarl856 Rempel203           10         5     1660.00  0.15       0.20\nChanell45 Morissette863     10         5     1408.24  0.15       0.20\nChaya236 Sporer811           6         3      834.00  0.15       0.33\n```\n:::\n:::\n\n\n## Providers Network\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngden(provider.stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02026008\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngtrans(provider.stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3677613\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nigraph::components(provider.ig)$no\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(provider.stat %e%\"dist\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLength  Class   Mode \n     0   NULL   NULL \n```\n:::\n:::\n\n\n## Provider Nodes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovider.nodes <- data.frame(\n  name = provider.stat %v% \"vertex.names\",\n  degree = round(sna::degree(provider.stat, gmode = \"digraph\"), 2),\n  degree.wt = round(igraph::strength(provider.ig), 2),\n  betweenness = round(sna::betweenness(provider.stat, gmode = \"digraph\"), 2),\n  close = round(sna::closeness(provider.stat, cmode = \"suminvdir\"), 2),\n  constraint = round(igraph::constraint(provider.ig), 2)\n)\n\nhead(provider.nodes, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        name degree degree.wt betweenness close constraint\n1         Elijah719 White193      6         3        0.00  0.20       0.33\n2          Fidel864 Swift555     16         8       32.83  0.21       0.12\n3         Virgen207 Hyatt152     12         6      471.83  0.27       0.17\n4        Zachery872 Pagac496     12         6       11.50  0.21       0.17\n5  Kristopher775 Schiller186      4         2        0.00  0.01       0.50\n6         Laine739 Torphy630      4         2        0.00  0.01       0.50\n7      Leonarda398 Schumm995      8         4        8.00  0.02       0.25\n8          Mathew182 Howe413      8         4       93.50  0.27       0.25\n9           Ted955 Reilly981    110        55    18266.49  0.44       0.02\n10    Vicente970 Armstrong51      6         3        0.00  0.27       0.33\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}