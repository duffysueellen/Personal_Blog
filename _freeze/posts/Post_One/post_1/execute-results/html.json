{
  "hash": "8adcb1d1d88bfb6660b47c7b8f46dca5",
  "result": {
    "markdown": "---\ntitle: \"The Patient Provider Relationship, A Synthetic Social Network\"\nsubtitle: \"Data Cleaning, Exploration, and Network Analysis\"\nauthor: \"Sue-Ellen Duffy\"\ndate: \"2024-04-20\"\ncategories: [code, analysis]\n---\n\n\nData for this project were taken from Synthetic Mass, which creates Synthetic patient data from Synthea.\n\n![](SyntheticMassLogo.png)\n\nWhile a whole host of datasets are available within each download, I will focus this project on three datasets: patients.csv, providers.csv, and encounters.csv.\n\n-   Patients and Providers will be the actors analyzed. The patient and provider datasets contain information on the person level details, with names and some demographic information, with more detail available for patients than providers.\n\n-   Encounters will be the relationships analyzed. Encounters are appointments, visits, and clinical encounters and include notes on the visit including the date, reason, and cost breakdown.\n\n    -   **Reminder: none of this data is real**, it is synthetic, so the personally identifiable information I share is not data on real people and cannot be used to identify real people.\n\nThis post will primarily focus on data cleaning and data exploration with some exploration into social network analysis through transforming the data into an incidence matrix and plotting some attributes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(igraph)\nlibrary(sna)\nlibrary(statnet)\nlibrary(ggplot2)\nlibrary(patchwork)\n```\n:::\n\n\n# Read in Patient, Provider, and Encounter Data\n\n## PATIENT DATA\n\nThe following table is the data available in the patient dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatients <- read_csv(\"synthea_sample_data_csv_latest/patients.csv\") %>%\n    rename(PATIENT = Id) %>%\n  unite(NAME, FIRST, LAST, sep = \" \")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 121 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (19): Id, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, ...\ndbl   (6): FIPS, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE, INCOME\ndate  (2): BIRTHDATE, DEATHDATE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 26\n  PATIENT       BIRTHDATE  DEATHDATE  SSN   DRIVERS PASSPORT PREFIX NAME  SUFFIX\n  <chr>         <date>     <date>     <chr> <chr>   <chr>    <chr>  <chr> <chr> \n1 b573d409-cfa… 1988-02-12 2004-12-30 999-… S99986… <NA>     <NA>   Avri… <NA>  \n2 2703570e-f63… 1999-03-13 NA         999-… S99998… X640979… Ms.    Norm… <NA>  \n3 35589a76-2a9… 2003-02-05 NA         999-… S99996… X735788… Ms.    Pegg… <NA>  \n4 d46186a3-507… 1986-11-07 NA         999-… S99939… X782935… Mrs.   Ashl… <NA>  \n5 983105f7-6f2… 1999-05-21 NA         999-… S99973… X519829… Ms.    Chri… <NA>  \n6 54ac079a-90a… 1988-02-12 NA         999-… S99995… X507824… Mrs.   Dion… <NA>  \n# ℹ 17 more variables: MAIDEN <chr>, MARITAL <chr>, RACE <chr>,\n#   ETHNICITY <chr>, GENDER <chr>, BIRTHPLACE <chr>, ADDRESS <chr>, CITY <chr>,\n#   STATE <chr>, COUNTY <chr>, FIPS <dbl>, ZIP <chr>, LAT <dbl>, LON <dbl>,\n#   HEALTHCARE_EXPENSES <dbl>, HEALTHCARE_COVERAGE <dbl>, INCOME <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [121 × 26] (S3: tbl_df/tbl/data.frame)\n $ PATIENT            : chr [1:121] \"b573d409-cfaf-c585-a25b-e9d4cf510bd3\" \"2703570e-f634-d4cc-13db-2ae14e19ae59\" \"35589a76-2a97-0a89-8c2d-56defc8627af\" \"d46186a3-507c-0b22-1bfc-1f88bd7cbd7d\" ...\n $ BIRTHDATE          : Date[1:121], format: \"1988-02-12\" \"1999-03-13\" ...\n $ DEATHDATE          : Date[1:121], format: \"2004-12-30\" NA ...\n $ SSN                : chr [1:121] \"999-97-2089\" \"999-76-8207\" \"999-64-2625\" \"999-67-4853\" ...\n $ DRIVERS            : chr [1:121] \"S99986968\" \"S99998444\" \"S99996738\" \"S99939817\" ...\n $ PASSPORT           : chr [1:121] NA \"X64097979X\" \"X7357887X\" \"X78293510X\" ...\n $ PREFIX             : chr [1:121] NA \"Ms.\" \"Ms.\" \"Mrs.\" ...\n $ NAME               : chr [1:121] \"Avril120 Olson653\" \"Norma469 Langosh790\" \"Peggie783 Eichmann909\" \"Ashlie138 Williamson769\" ...\n $ SUFFIX             : chr [1:121] NA NA NA NA ...\n $ MAIDEN             : chr [1:121] NA NA NA \"Cummerata161\" ...\n $ MARITAL            : chr [1:121] NA NA NA \"M\" ...\n $ RACE               : chr [1:121] \"white\" \"white\" \"white\" \"white\" ...\n $ ETHNICITY          : chr [1:121] \"nonhispanic\" \"nonhispanic\" \"nonhispanic\" \"nonhispanic\" ...\n $ GENDER             : chr [1:121] \"F\" \"F\" \"F\" \"F\" ...\n $ BIRTHPLACE         : chr [1:121] \"Quincy  Massachusetts  US\" \"Somerville  Massachusetts  US\" \"Pittsfield  Massachusetts  US\" \"Salem  Massachusetts  US\" ...\n $ ADDRESS            : chr [1:121] \"590 Kuhic Frontage road\" \"525 Gleason Burg Suite 75\" \"230 Ratke Neck Suite 55\" \"355 Eichmann Underpass\" ...\n $ CITY               : chr [1:121] \"Newton\" \"Bridgewater\" \"Walpole\" \"Lexington\" ...\n $ STATE              : chr [1:121] \"Massachusetts\" \"Massachusetts\" \"Massachusetts\" \"Massachusetts\" ...\n $ COUNTY             : chr [1:121] \"Middlesex County\" \"Plymouth County\" \"Norfolk County\" \"Middlesex County\" ...\n $ FIPS               : num [1:121] 25017 25023 25021 25017 25017 ...\n $ ZIP                : chr [1:121] \"02461\" \"02324\" \"02081\" \"02421\" ...\n $ LAT                : num [1:121] 42.4 42 42.1 42.4 42.3 ...\n $ LON                : num [1:121] -71.2 -71 -71.2 -71.2 -71.5 ...\n $ HEALTHCARE_EXPENSES: num [1:121] 31150 50725 65580 162538 141345 ...\n $ HEALTHCARE_COVERAGE: num [1:121] 129135 100008 32578 809077 282706 ...\n $ INCOME             : num [1:121] 482269 190464 78997 6472 141475 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(patients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   PATIENT            BIRTHDATE            DEATHDATE         \n Length:121         Min.   :1915-06-30   Min.   :1974-12-14  \n Class :character   1st Qu.:1959-04-12   1st Qu.:2004-04-13  \n Mode  :character   Median :1983-05-26   Median :2010-05-15  \n                    Mean   :1979-08-14   Mean   :2008-12-31  \n                    3rd Qu.:1999-09-28   3rd Qu.:2019-12-16  \n                    Max.   :2022-08-22   Max.   :2023-10-05  \n                                         NA's   :100         \n     SSN              DRIVERS            PASSPORT            PREFIX         \n Length:121         Length:121         Length:121         Length:121        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     NAME              SUFFIX             MAIDEN            MARITAL         \n Length:121         Length:121         Length:121         Length:121        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     RACE            ETHNICITY            GENDER           BIRTHPLACE       \n Length:121         Length:121         Length:121         Length:121        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   ADDRESS              CITY              STATE              COUNTY         \n Length:121         Length:121         Length:121         Length:121        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n      FIPS           ZIP                 LAT             LON        \n Min.   :25001   Length:121         Min.   :41.56   Min.   :-73.26  \n 1st Qu.:25014   Class :character   1st Qu.:42.15   1st Qu.:-71.51  \n Median :25017   Mode  :character   Median :42.28   Median :-71.13  \n Mean   :25018                      Mean   :42.24   Mean   :-71.27  \n 3rd Qu.:25025                      3rd Qu.:42.40   3rd Qu.:-71.01  \n Max.   :25027                      Max.   :42.77   Max.   :-70.12  \n NA's   :19                                                         \n HEALTHCARE_EXPENSES HEALTHCARE_COVERAGE     INCOME      \n Min.   :    500     Min.   :      0     Min.   :  3365  \n 1st Qu.:  21279     1st Qu.:  23029     1st Qu.: 32577  \n Median :  65580     Median : 165466     Median : 71082  \n Mean   : 166163     Mean   : 409297     Mean   :134519  \n 3rd Qu.: 221068     3rd Qu.: 679128     3rd Qu.:135462  \n Max.   :1547205     Max.   :1955909     Max.   :931642  \n                                                         \n```\n:::\n:::\n\n\nI am only keeping the demographic data below (gender, race, marital status, income, and age) which will be used as an attribute for each patient.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Create AGE from BIRTHDATE\npatients <- patients %>%\n  mutate(\n    BIRTHDATE = as.Date(BIRTHDATE),  # Ensure 'dob' is in Date format\n    AGE = interval(BIRTHDATE, today()) / years(1)  # Calculate age in years\n  ) %>%\n  mutate(\n    AGE = floor(AGE)  # complete years only, removing decimal\n  )\n# Only keep patient name and demographics. This will be utilized as the attribute data for analysis.\npat_attr <- patients%>% \n  select(NAME, GENDER, RACE, MARITAL, INCOME, AGE)\nhead(pat_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  NAME                       GENDER RACE  MARITAL INCOME   AGE\n  <chr>                      <chr>  <chr> <chr>    <dbl> <dbl>\n1 Avril120 Olson653          F      white <NA>    482269    36\n2 Norma469 Langosh790        F      white <NA>    190464    25\n3 Peggie783 Eichmann909      F      white <NA>     78997    21\n4 Ashlie138 Williamson769    F      white M         6472    37\n5 Christiane220 Ankunding277 F      white <NA>    141475    24\n6 Dione665 O'Kon634          F      white M       482269    36\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npat_race <- ggplot(pat_attr,aes(RACE)) + geom_bar()\npat_gender <- ggplot(pat_attr,aes(GENDER)) + geom_bar()\n\npat_race + pat_gender + plot_annotation(title = \"Patient Race and Gender Breakdown\")\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(pat_attr,aes(MARITAL)) + geom_bar() + labs(title = \"Patient Marital Status\")\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\npat_income <- ggplot(pat_attr, aes(x = 1, y = INCOME)) +\n    geom_jitter(width = 0.2) +\n    labs(x = NULL, y = \"Income\") +\n    theme_minimal() + labs(title = \"Patient Income\")\n\nsummary(pat_attr$INCOME)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   3365   32577   71082  134519  135462  931642 \n```\n:::\n\n```{.r .cell-code}\npat_age <- ggplot(pat_attr,aes(AGE)) + geom_bar()\n```\n:::\n\n\nKey for marital status: M (married), S (single), D (divorced), W (widowed) (There is missing data here)\n\n## PROVIDER DATA\n\nThe following table is the data available in the provider dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproviders <- read_csv(\"synthea_sample_data_csv_latest/providers.csv\") %>%\n    rename(PROVIDER = Id)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 279 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): Id, ORGANIZATION, NAME, GENDER, SPECIALITY, ADDRESS, CITY, STATE, ZIP\ndbl (4): LAT, LON, ENCOUNTERS, PROCEDURES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(providers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n  PROVIDER  ORGANIZATION NAME  GENDER SPECIALITY ADDRESS CITY  STATE ZIP     LAT\n  <chr>     <chr>        <chr> <chr>  <chr>      <chr>   <chr> <chr> <chr> <dbl>\n1 586477e1… 74ab949d-17… Ted9… M      GENERAL P… 881 Ma… Fitc… MA    01420  42.6\n2 4b284e0c… e09d4c49-c2… Barb… F      GENERAL P… 60 HOS… LEOM… MA    0145…  42.5\n3 88668b3f… e76b5eb0-0c… Gise… F      GENERAL P… 1400 V… West… MA    02132  42.3\n4 21a7f0e9… 77645e49-3f… Vell… F      GENERAL P… 363 HI… FALL… MA    0272…  41.7\n5 49671606… aa682136-a4… Prec… F      GENERAL P… 501 CO… NORW… MA    0206…  42.2\n6 bcc6badc… d2284f74-b6… Fern… F      GENERAL P… 331 E … E FA… MA    0253…  41.6\n# ℹ 3 more variables: LON <dbl>, ENCOUNTERS <dbl>, PROCEDURES <dbl>\n```\n:::\n:::\n\n\nI am only keeping the demographic data below (gender) which will be used as an attribute for each provider.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Only keep provider name and demographics. This will be utilized as the attribute data for analysis. The only demographic data available for Providers is gender.\npro_attr <- providers %>%\n  select(NAME, GENDER)\nhead(pro_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  NAME                      GENDER\n  <chr>                     <chr> \n1 Ted955 Reilly981          M     \n2 Barbara209 Maldonado119   F     \n3 Gisele901 Lehner980       F     \n4 Vella930 Ankunding277     F     \n5 Precious140 Runolfsson901 F     \n6 Fernande593 Mosciski958   F     \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(pro_attr, aes(GENDER)) +geom_bar() + labs(title = \"Provider Gender Breakdown\")\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## ENCOUNTER DATA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nencounters <- read_csv(\"synthea_sample_data_csv_latest/encounters.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 11987 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): Id, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, DESCRI...\ndbl  (5): CODE, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASO...\ndttm (2): START, STOP\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(encounters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 15\n  Id       START               STOP                PATIENT ORGANIZATION PROVIDER\n  <chr>    <dttm>              <dttm>              <chr>   <chr>        <chr>   \n1 4afc6ab… 2013-11-02 00:34:37 2013-11-02 00:49:37 270357… 51370692-62… c0cc76b…\n2 c502ee2… 2014-11-01 12:48:31 2014-11-01 13:03:31 35589a… 57e4e5fa-d6… 896d5c7…\n3 6f3ad10… 1995-02-03 08:38:10 1995-02-03 08:53:10 b573d4… 67d2f85b-dd… 4087a49…\n4 0d9b475… 2015-02-25 16:48:31 2015-02-25 17:17:55 35589a… ca62a361-9c… 370ff56…\n5 ec0d6c6… 2013-11-09 00:34:37 2013-11-09 00:49:37 270357… 51370692-62… c0cc76b…\n6 ec41ff9… 2014-03-16 11:34:37 2014-03-16 11:49:37 270357… 51370692-62… c0cc76b…\n# ℹ 9 more variables: PAYER <chr>, ENCOUNTERCLASS <chr>, CODE <dbl>,\n#   DESCRIPTION <chr>, BASE_ENCOUNTER_COST <dbl>, TOTAL_CLAIM_COST <dbl>,\n#   PAYER_COVERAGE <dbl>, REASONCODE <dbl>, REASONDESCRIPTION <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(encounters, aes(ENCOUNTERCLASS)) + geom_bar() + coord_flip()+ labs(title = \"Type of Visit\")\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = encounters %>% \n         count(DESCRIPTION) %>% \n         filter(n > 50),  # Filter for counts higher than 10\n       aes(x = DESCRIPTION, y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Visit Description\", \"\\n*filtered to show >50 visits\"))\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = encounters %>% \n         count(REASONDESCRIPTION) %>% \n         filter(n > 50),  # Filter for counts higher than 10\n       aes(x = REASONDESCRIPTION, y = n)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + labs(title = paste(\"Reason Patient Visited Provider\", \"\\n*filtered to show >50 visits\"))\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\nI am noticing a lot of kidney related diseases in this dataset\n\n## Combine Patient, Provider, and Encounter Data\n\nI am taking this step here so that I have a master dataset (encounters_attributes) and so that I can create an edgelist more easily.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform a left join to merge encounters with provider_attributes based on PROVIDER\nencounters_cleaning <- left_join(encounters, providers, by = \"PROVIDER\")\n# Replace the PROVIDER column with the corresponding names from the NAME column\nencounters_cleaning$PROVIDER <- encounters_cleaning$NAME\n# Remove the NAME column if no longer needed\nencounters_cleaning <- encounters_cleaning %>%\n  select(-NAME)\n#Repeat for Provider\nencounters_cleaning <- left_join(encounters_cleaning, patients, by = \"PATIENT\")\nencounters_cleaning$PATIENT <- encounters_cleaning$NAME\nencounters_cleaning <- encounters_cleaning %>%\n  select(-NAME) \n#Clearly identify the Encounter ID\nencounters_cleaning <- encounters_cleaning %>%\n  rename(ENCOUNTER_ID = Id)\nencounter_attributes <- encounters_cleaning %>%\n  select(ENCOUNTER_ID, PATIENT, PROVIDER, GENDER.x, GENDER.y, RACE, MARITAL, ETHNICITY, INCOME)\n# View the updated dataframe\nhead(encounter_attributes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  ENCOUNTER_ID PATIENT PROVIDER GENDER.x GENDER.y RACE  MARITAL ETHNICITY INCOME\n  <chr>        <chr>   <chr>    <chr>    <chr>    <chr> <chr>   <chr>      <dbl>\n1 4afc6abc-ab… Norma4… Jeromy1… M        F        white <NA>    nonhispa… 190464\n2 c502ee2d-1d… Peggie… Abdul21… M        F        white <NA>    nonhispa…  78997\n3 6f3ad103-a2… Avril1… Marshal… M        F        white <NA>    nonhispa… 482269\n4 0d9b475b-5e… Peggie… Benedic… M        F        white <NA>    nonhispa…  78997\n5 ec0d6c63-84… Norma4… Jeromy1… M        F        white <NA>    nonhispa… 190464\n6 ec41ff94-ed… Norma4… Jeromy1… M        F        white <NA>    nonhispa… 190464\n```\n:::\n:::\n\n\n## EDGELIST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Edgelist\nencounters_el <- encounter_attributes %>%\n  group_by(PATIENT, PROVIDER) %>%\n  summarize(COUNT = n()) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'PATIENT'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nhead(encounters_el)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   PATIENT [2]\n  PATIENT               PROVIDER              COUNT\n  <chr>                 <chr>                 <int>\n1 Akiko835 Larkin917    Emilio417 Barton704      18\n2 Akiko835 Larkin917    Frederic454 Larkin917     7\n3 Akiko835 Larkin917    Jim478 Goyette777         2\n4 Akiko835 Larkin917    Kirby843 McKenzie376     19\n5 Akiko835 Larkin917    Ted955 Reilly981          1\n6 Anneliese170 Berge125 Althea11 Ankunding277     6\n```\n:::\n\n```{.r .cell-code}\ndim(encounters_el)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 437   3\n```\n:::\n:::\n\n\n## COMBINED ATTRIBUTE LIST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combine pro and pat attr\npat_attr$type <- \"PATIENT\"\npro_attr$type <- \"PROVIDER\"\nboth_attr <- bind_rows(pat_attr, pro_attr)\nhead(both_attr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  NAME                       GENDER RACE  MARITAL INCOME   AGE type   \n  <chr>                      <chr>  <chr> <chr>    <dbl> <dbl> <chr>  \n1 Avril120 Olson653          F      white <NA>    482269    36 PATIENT\n2 Norma469 Langosh790        F      white <NA>    190464    25 PATIENT\n3 Peggie783 Eichmann909      F      white <NA>     78997    21 PATIENT\n4 Ashlie138 Williamson769    F      white M         6472    37 PATIENT\n5 Christiane220 Ankunding277 F      white <NA>    141475    24 PATIENT\n6 Dione665 O'Kon634          F      white M       482269    36 PATIENT\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create combined attribute list\nattribute_list <- do.call(list, both_attr)\n```\n:::\n\n\n## NETWORK\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create bipartite network with attributes\nencounters.st.3 <- network(encounters_el,\n                         directed = FALSE,\n                         bipartite = TRUE,\n                         matrix.type = \"edgelist\",\n                         vertex.attr = attribute_list)\nencounters.st.3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 374 \n  directed = FALSE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = 121 \n  total edges= 437 \n    missing edges= 0 \n    non-missing edges= 437 \n\n Vertex attribute names: \n    AGE GENDER INCOME MARITAL NAME RACE type vertex.names \n\n Edge attribute names: \n    COUNT \n```\n:::\n:::\n\n\n# Graph Section\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincidence_graph <- graph_from_biadjacency_matrix(encounters.st.3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a graph from the edgelist\ng <- graph_from_data_frame(encounters_el, \n                                        directed = FALSE)\nmap_g <- bipartite_mapping(g)\nhead(map_g$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nhead(map_g$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Akiko835 Larkin917   Anneliese170 Berge125    Annice210 McClure239 \n                  FALSE                   FALSE                   FALSE \n   Anthony633 Renner328      Arleen939 Kling921 Ashlie138 Williamson769 \n                  FALSE                   FALSE                   FALSE \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign overall Graph Color Scheme for Consistency\n\n# Assign vertex attributes\nV(g)$type <- c(rep(\"PATIENT\", n_distinct(encounters_el$PATIENT)), \n                             rep(\"PROVIDER\", n_distinct(encounters_el$PROVIDER)))\n\nvertex_colors <- ifelse(attribute_list$GENDER == \"F\", \"green\", \"yellow\")\n\nvertex_shape <- ifelse(V(g)$type == \"PATIENT\", \"circle\", \"square\")\n# Find the range of counts in the graph\ncount_range <- range(E(g)$COUNT)\n\n# Define the edge widths based on the counts\nedge_widths <- ifelse(E(g)$COUNT < 5, 1,\n                      ifelse(E(g)$COUNT < 20, 50,\n                             3 * (E(g)$COUNT - count_range[1]) / (count_range[2] - count_range[1])))\nedge_widths <- edge_widths *300\n\nedge_widths <- ifelse(E(g)$COUNT < 5, 0.5, ifelse(E(g)$COUNT < 20, 1, 2))\nedge_colors <- ifelse(E(g)$COUNT < 5, \"yellow\", \n                      ifelse(E(g)$COUNT <= 20, \"blue\", \"red\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(g, \n     layout = layout.fruchterman.reingold, \n     vertex.label.dist = 2, \n     vertex.size = 2, \n     vertex.color = vertex_colors,\n     vertex.shape = vertex_shape,\n     edge.label = NA,\n     vertex.label = NA,\n     vertex.label.cex = 0.2, \n     edge.width = edge_widths,\n     edge.color = edge_colors,\n     main = \"SN Graph\")\n# Define legend for vertex colors\nlegend(\"bottomright\",\n       legend = c(\"Female\", \"Male\"),  # You can customize these labels\n       fill = c(\"green\", \"yellow\"),   # Fill colors corresponding to vertex colors\n       title = \"Nodes: Gender\")              # Legend title\n\n# Define legend for vertex shapes\nlegend(\"topright\",\n       legend = c(\"Patient\", \"Provider\"),  # You can customize these labels\n       pch = c(1, 0),                      # Point shapes corresponding to vertex shapes\n       title = \"Nodes: Who\")                     # Legend title\n\n# Define legend for edge colors\nlegend(\"topleft\",\n       legend = c(\"1-4\", \"5-19\", \"20+\"),  # You can customize these labels\n       col = c(\"yellow\", \"blue\", \"red\"),  # Line colors corresponding to edge colors\n       lwd = 2,                            # Line width\n       title = \"Edges: # of Visits\")              # Legend title\n```\n\n::: {.cell-output-display}\n![](post_1_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nThis graph shows a myriad of patient, provider relationships. One provider seems to be at the center of the graph, having the most edges reaching out to different patients. This central provider sees many patients only 1-4 times (indicated in yellow).\n\nWe see many providers close to the center that also have blue and red edges, indicating that they see 5-19 patients (blue) or more than 20 patients (red).\n\nThere are also many patients and providers that are not linked into the larger group, with pairings of one patient and one provider, one patient and two providers, one patient and three providers, two patients and three providers, two patients and four providers, and so on.\n\nMy next steps will include looking more deeply at these relationships through blocking, filtering, and density analysis.\n\nUse to write CSV\n\n#write csv write.csv(pat_attr, \"pat_attr.csv\")\n\nwrite.csv(pro_attr, \"pro_attr.csv\")\n\nwrite.csv(encounters_cleaning, \"encounters_cleaning.csv\")\n\nwrite.csv(encounter_attributes, \"encounter_attributes.csv\")\n\nwrite.csv(attribute_list, \"attribute_list.csv\")\n\nwrite.csv(encounters_el, \"encounters_el.csv\")\n\nwrite.csv(encounters.st.3, \"encounters.st.3.csv\")\n",
    "supporting": [
      "post_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}